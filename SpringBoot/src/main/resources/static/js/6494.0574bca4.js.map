{"version":3,"file":"js/6494.0574bca4.js","mappings":"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","sources":["webpack://mile/./src/views/desk/qna/QnaListView.vue","webpack://mile/./src/views/desk/qna/QnaListView.vue?1b86"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"content cards\" @click=\"handleClick\">\r\n      <div>\r\n        <h2>Q&A</h2>\r\n      </div>\r\n      <div @click.stop=\"toggleCategory\" class=\"QnA\" ref=\"categoryButton\">\r\n        <div class=\"category-button list-wrapper\">카테고리</div>\r\n        <div class=\"dropdown-menu\" v-if=\"showCategory\" ref=\"dropdownMenu\">\r\n          <div class=\"menu-items\">\r\n            <a class=\"dropdown-item\" @click=\"filterByCategory(null)\">전체</a>\r\n            <a class=\"dropdown-item\" v-for=\"mileage in mileages\" :key=\"mileage.mile_no\" @click=\"filterByCategory(mileage.mile_name)\">\r\n              <span v-if=\"mileage.mile_name === '기타'\">{{ mileage.mile_name }}</span>\r\n              <span v-else>{{ mileage.mile_name }} 마일리지</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"notice-count-container\">\r\n        <div class=\"notice-count\">총 {{ filteredNotices.length }}건</div>\r\n        <label class=\"checkbox-container\">\r\n          <input type=\"checkbox\" v-model=\"sortByDateAsc\" @change=\"handleCheckboxChange('date')\">\r\n          <span class=\"custom-checkbox\"></span> <span class=\"checkbox-label\">최신순</span>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <div v-if=\"isLoggedIn && loginInfo.user_is_admin && !loginInfo.user_is_manager && isChecked\">\r\n          <button class=\"write-button\" @click=\"goToWritePage\">\r\n            <i class=\"bi bi-pencil\" style=\"margin-right:10px;\"></i> 글작성\r\n          </button>\r\n         </div>\r\n      </div>\r\n      <!-- 검색 창 -->\r\n      <div class=\"search-container\">\r\n        <input \r\n        type=\"text\" \r\n        v-model=\"searchQuery\" \r\n        placeholder=\"제목 및 내용을 검색하세요\" \r\n        class=\"input-search\"/>\r\n        <button class=\"search-button\" @click=\"searchNotices\">\r\n          <i class=\"bi bi-search\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"notice-list\">\r\n        <div v-if=\"paginatedNotices.length\">\r\n          <div class=\"input-base list-wrapper\" v-for=\"notice in paginatedNotices\" :key=\"notice.notice_board_no\" @click=\"handleNoticeClick(notice)\">\r\n              <div class=\"notice-details\">\r\n                <div v-if=\"notice.is_new\" class=\"notice-new\">{{ notice.display_num }}</div>\r\n                <div v-else class=\"notice-num\">{{ notice.display_num }}</div>\r\n                <div class=\"notice-mile\">{{ notice.mile_name }} 마일리지</div>\r\n                <div class=\"notice-title\">{{ notice.notice_board_title }}</div>\r\n                <div class=\"notice-date\">{{ formatDate(notice.notice_board_date) }}</div>\r\n                <i class=\"bi bi-eye\"></i>\r\n                <div class=\"notice-views\">{{ notice.notice_board_hit }} <i class=\"fa fa-eye\"></i></div>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div v-else>\r\n          <p>게시글이 없습니다.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"pagination\">\r\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\">〈</button>\r\n        <button @click=\"goToPage(page)\" :class=\"{ active: currentPage === page }\" v-for=\"page in totalPages\" :key=\"page\">{{ page }}</button>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">〉</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport api from '@/api/axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      notices: [],\r\n      mileages: [],\r\n      showCategory: false,\r\n      currentPage: 1,\r\n      itemsPerPage: 10,\r\n      searchQuery: '',\r\n      selectedCategory: null,\r\n      isProcessing: false,\r\n      sortByDateAsc: true, // 최신순 체크박스가 기본으로 선택\r\n      sortByViews: false, // 조회 수 정렬 여부\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters('login', ['getLoginInfo', 'getIsChecked']),\r\n\r\n    filteredNotices() {\r\n    let result = this.notices;\r\n    if (this.searchQuery) {\r\n      const query = this.searchQuery.toLowerCase();\r\n      result = result.filter(notice => \r\n        notice.notice_board_title.toLowerCase().includes(query) || \r\n        notice.notice_board_content.toLowerCase().includes(query)\r\n      );\r\n    }\r\n    if (this.selectedCategory !== null) {\r\n      result = result.filter(notice => \r\n        notice.mile_name === this.selectedCategory\r\n      );\r\n    }\r\n    if (this.sortByViews) {\r\n      result.sort((a, b) => b.notice_board_hit - a.notice_board_hit || new Date(b.notice_board_date) - new Date(a.notice_board_date));\r\n    } else if (this.sortByDateAsc) {\r\n      result.sort((a, b) => new Date(b.notice_board_date) - new Date(a.notice_board_date));\r\n    } else {\r\n      result.sort((a, b) => new Date(a.notice_board_date) - new Date(b.notice_board_date));\r\n    }\r\n   // NEW 항목과 번호 증가를 처리합니다.\r\n   let displayNum = 1;\r\n    return result.map(notice => ({\r\n      ...notice,\r\n      is_new: this.isNew(notice.notice_board_date),\r\n      display_num: this.isNew(notice.notice_board_date) ? 'NEW' : displayNum++\r\n    }));\r\n  },\r\n\r\n    loginInfo() {\r\n      return this.getLoginInfo;\r\n    },\r\n    isChecked() {\r\n      return this.getIsChecked;\r\n    },\r\n    isLoggedIn() {\r\n      return !!this.loginInfo;\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredNotices.length / this.itemsPerPage);\r\n    },\r\n    paginatedNotices() {\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    const end = start + this.itemsPerPage;\r\n    return this.filteredNotices.slice(start, end);\r\n  },\r\n\r\n  },\r\n  methods: {\r\n    isNew(dateString) {\r\n    const today = new Date();\r\n    const noticeDate = new Date(dateString);\r\n    const differenceInTime = today.getTime() - noticeDate.getTime();\r\n    const differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n    return differenceInDays <= 7;\r\n  },\r\n    handleCheckboxChange(sortType) {\r\n      if (sortType === 'views' && this.sortByViews) {\r\n        this.sortByDateAsc = false;\r\n      } else if (sortType === 'date' && this.sortByDateAsc) {\r\n        this.sortByViews = false;\r\n      }\r\n    },\r\n    toggleCategory() {\r\n      this.showCategory = !this.showCategory;\r\n    },\r\n    closeDropdown() {\r\n      this.showCategory = false;\r\n    },\r\n    handleClickOutside(event) {\r\n      if (\r\n        this.$refs.dropdownMenu &&\r\n        !this.$refs.dropdownMenu.contains(event.target) &&\r\n        this.$refs.categoryButton &&\r\n        !this.$refs.categoryButton.contains(event.target)\r\n      ) {\r\n        this.closeDropdown();\r\n      }\r\n    },\r\n    goToPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    goToWritePage() {\r\n      this.$router.push({ name: 'noticeWriteAdminView' });\r\n    },\r\n    async fetchNotices() {\r\n      console.log('fetchNotices method called'); // 이 로그가 출력되는지 확인합니다.\r\n      try {\r\n        const response = await api.get('/notice/list');\r\n        console.log('Fetched notices:', response.data);\r\n        this.notices = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching notices:', error.response ? error.response.data : error.message);\r\n      }\r\n    },\r\n    async fetchMileages() {\r\n      try {\r\n        const response = await api.get('/notice/mileage');\r\n        console.log('Fetched mileages:', response.data);\r\n        this.mileages = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching mileages:', error.response ? error.response.data : error.message);\r\n      }\r\n    },\r\n    async handleNoticeClick(notice) {\r\n      if (this.isProcessing) return;\r\n      this.isProcessing = true;\r\n      try {\r\n        const response = await api.post(`/notice/increment-views/${notice.notice_board_no}`);\r\n        console.log('Increment views response:', response.data);\r\n\r\n        const noticeIndex = this.notices.findIndex(n => n.notice_board_no === notice.notice_board_no);\r\n        if (noticeIndex !== -1) {\r\n          this.notices[noticeIndex] = {\r\n            ...this.notices[noticeIndex],\r\n            notice_board_hit: (this.notices[noticeIndex].notice_board_hit || 0) + 1\r\n          };\r\n        }\r\n\r\n        this.$router.push({\r\n          name: 'noticeDetailView',\r\n          params: { \r\n            id: notice.notice_board_no, \r\n            notice: {\r\n              ...notice,\r\n              mile_no: notice.mile_no,\r\n              mile_name: notice.mile_name\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error incrementing views:', error.response ? error.response.data : error.message);\r\n      } finally {\r\n        this.isProcessing = false;\r\n      }\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n      return new Date(dateString).toLocaleDateString('ko-KR', options);\r\n    },\r\n    searchNotices() {\r\n      this.currentPage = 1;\r\n    },\r\n    filterByCategory(mileName) {\r\n      this.selectedCategory = mileName;\r\n      this.currentPage = 1;\r\n    },\r\n    refreshPage() {\r\n      this.selectedCategory = null;\r\n      this.searchQuery = '';\r\n      this.currentPage = 1;\r\n    },\r\n  },\r\n  mounted() {\r\n    console.log('loginInfo:', this.loginInfo);\r\n    console.log('isLoggedIn:', this.isLoggedIn);\r\n    console.log('isChecked:', this.isChecked);\r\n\r\n    document.addEventListener('click', this.handleClickOutside);\r\n\r\n    this.fetchNotices();\r\n    this.fetchMileages();\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Arial, sans-serif';\r\n  overflow-x: hidden; /* 수평 스크롤바 제거 */\r\n  height: 100%; /* 페이지 높이를 100%로 설정 */\r\n}\r\n\r\nbody {\r\n  overflow-y: scroll; /* 수직 스크롤바 유지 */\r\n}\r\n\r\nh2 {\r\n  font-family: 'KB_S4', sans-serif;\r\n  font-size: 40px;\r\n  margin-top: 30px;\r\n  display: inline-block; /* 밑줄 길이를 텍스트 길이에 맞춥니다 */\r\n  position: relative;\r\n}\r\n\r\nh2::after {\r\n  content: '';\r\n  display: block;\r\n  width: 120%; /* 텍스트보다 긴 밑줄을 위해 조정 */\r\n  height: 1px; /* 밑줄 두께 */\r\n  background-color: #8d8d8d; /* 밑줄 색상 */\r\n  position: absolute;\r\n  bottom: -5px; /* 텍스트와 밑줄 사이의 간격을 위해 조정 */\r\n  left: -10%; /* 중앙 정렬을 위해 조정 */\r\n}\r\n\r\n.app-container {\r\n  width: 100%;\r\n  padding: 0;\r\n  min-height: 100vh; /* 최소 높이를 설정하여 페이지 전체를 채움 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top : 4%;\r\n  \r\n}\r\n\r\n.content {\r\n  text-align: center;\r\n  padding: 20px;\r\n  width: 95%;\r\n  max-width: 1300px;\r\n  box-sizing: border-box;\r\n  min-height: 100vh;\r\n  margin: auto;\r\n}\r\n\r\n.content.cards {\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  padding: 60px;\r\n  border-radius: 8px;\r\n  box-sizing: border-box;\r\n  max-width: 1300px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.category-button {\r\n  background-color: #f9f9f9;\r\n  border-radius: 25px;\r\n  padding: 12px 40px;\r\n  cursor: pointer;\r\n  margin-bottom: 80px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px; /* 공지사항과 카테고리 버튼 사이의 간격 */\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  font-family: 'KB_S5', sans-serif;\r\n  opacity: 0.8; /* 투명도 설정, 1은 불투명, 0은 완전 투명 */\r\n}\r\n\r\n.search-container {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative; /* 상대 위치 */\r\n  margin-bottom: 40px;\r\n  justify-content: flex-end; /* 오른쪽 정렬 */\r\n  opacity: 1; /* 투명도 설정, 1은 불투명, 0은 완전 투명 */\r\n}\r\n\r\n.input-search {\r\n  border-radius: 30px;\r\n  padding-right: 50px; /* 아이콘 공간 확보 */\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* 그림자 추가 */\r\n  outline: none;\r\n  font-size: 19px;\r\n  font-family: 'KB_S5', sans-serif;\r\n  width: 28%;\r\n  border: none;\r\n  margin: 5px;\r\n  height: 60px; /* 높이를 조금 높여줌 */\r\n}\r\n\r\n.search-button {\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  width: 80px; /* 높이를 조금 높여줌 */\r\n  height: 80px; /* 높이를 조금 높여줌 */\r\n  opacity: 0.8; /* 투명도 설정, 1은 불투명, 0은 완전 투명 */\r\n}\r\n\r\n.search-button .bi-search {\r\n  font-size: 25px; /* 아이콘 크기 조정 */\r\n}\r\n\r\n.notice-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.notice-count {\r\n  margin-bottom: 10px;\r\n  font-size: 19px;\r\n  font-family: 'KB_S5', sans-serif;\r\n  text-align: left; /* 왼쪽 정렬 */\r\n  padding-left: 3%;\r\n}\r\n\r\n.notice-count-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.checkbox-container {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  position: relative;\r\n  top: -5px; /* 위치를 살짝 위로 올립니다 */\r\n}\r\n\r\n.checkbox-container input[type=\"checkbox\"] {\r\n  display: none; /* 기본 체크박스를 숨깁니다 */\r\n}\r\n\r\n.checkbox-container .custom-checkbox {\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  border: 2px solid #ccc;\r\n  margin-left: 10px;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  position: relative;\r\n}\r\n\r\n.checkbox-container input[type=\"checkbox\"]:checked + .custom-checkbox {\r\n  background-color: #f6a319; /* 체크된 상태일 때 배경색 변경 (노란색) */\r\n  border: none; /* 체크된 상태일 때 테두리 제거 */\r\n}\r\n\r\n.checkbox-container input[type=\"checkbox\"]:checked + .custom-checkbox::after {\r\n  content: '✓';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  color: white;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.checkbox-label {\r\n  margin-left: 10px; /* 체크박스와 텍스트 사이 간격 */\r\n  font-family: 'KB_S5', sans-serif;\r\n  font-size: 20px;\r\n}\r\n\r\n.input-base {\r\n  width: 100%;\r\n  height: 65px;\r\n  background-color: #f9f9f9;\r\n  text-align: center; /* 가로 정렬 */\r\n  line-height: 65px; /* 세로 정렬 */\r\n  font-size: 20px;\r\n  margin-bottom: 20px; /*글 목록 사이 공간*/\r\n}\r\n\r\n.list-wrapper:hover {\r\n  cursor: pointer;\r\n  background-color: #E1E3E4 !important;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.notice-details {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.notice-title {\r\n  flex: 1 1 150%;\r\n  text-align: center;\r\n  letter-spacing: 1px; /* 예시: 제목의 글자 간 거리 */\r\n  font-size: 20px;\r\n  font-family: 'KB_S5', sans-serif;\r\n}\r\n\r\n.notice-num {\r\n  flex: 1 1 20%;\r\n  text-align: center;\r\n  letter-spacing: 1px; /* 예시: 번호의 글자 간 거리 */\r\n  font-size: 12pt;\r\n  font-family: 'KB_S5', sans-serif;\r\n}\r\n.notice-new{\r\n  flex: 1 1 20%;\r\n  text-align: center;\r\n  letter-spacing: 1px; /* 예시: 번호의 글자 간 거리 */\r\n  font-size: 12pt;\r\n  font-family: 'KB_S5', sans-serif;\r\n  color: #edbb00;\r\n}\r\n.notice-mile {\r\n  flex: 1 1 50%;\r\n  text-align: left;\r\n  letter-spacing: 1.5px; /* 예시: 날짜의 글자 간 거리 */\r\n  color: #745F40;\r\n  font-family: 'KB_S5', sans-serif;\r\n  font-size: 0.8em;\r\n  margin-left: 10px; /* 왼쪽 여백 추가 */\r\n}\r\n\r\n.notice-date {\r\n  flex: 1 1 60%;\r\n  text-align: center;\r\n  letter-spacing: 1.5px; /* 예시: 날짜의 글자 간 거리 */\r\n  font-size: 16px;\r\n  font-family: 'KB_S5', sans-serif;\r\n}\r\n\r\n.notice-views {\r\n  flex: 1 1 20%; /* flex-grow, flex-shrink, flex-basis */\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 19px;\r\n}\r\n\r\n.views-text {\r\n  flex: 1;\r\n  text-align: right; /* 텍스트를 오른쪽 정렬 */\r\n  font-size: 18px;\r\n  font-family: 'KB_S5', sans-serif;\r\n}\r\n\r\n.views-icon {\r\n  flex: 1 1 30%;\r\n  margin-left: 1%; /* 텍스트와 아이콘 사이의 비율 간격 */\r\n}\r\n\r\n/* 드롭다운 메뉴 스타일 */\r\n.QnA {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-menu {\r\n  display: none;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 50%;\r\n  z-index: 1;\r\n  border: none; /* 테두리 제거 */\r\n  background-color: rgba(255, 255, 255, 0.69);\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  width: 230px; /* 드롭다운 메뉴의 너비를 픽셀 단위로 고정 */\r\n  transform: translate(-50%, -16%); /* 수평 위치 중앙 정렬, 수직 위치 위로 이동 */\r\n}\r\n\r\n.QnA:hover .dropdown-menu,\r\n.QnA .dropdown-menu {\r\n  display: block;\r\n}\r\n\r\n.menu-items {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.menu-items a {\r\n  display: block;\r\n  padding: 10px 20px; /* 상하 패딩과 좌우 패딩을 픽셀 단위로 설정 */\r\n  text-decoration: none;\r\n  color: #4b4a4a;\r\n  font-family: 'KB_S5', sans-serif;\r\n  font-size: 18px; /* 텍스트 크기를 픽셀 단위로 설정 */\r\n}\r\n\r\n.menu-items a:hover {\r\n  background-color: #f5f5f5;\r\n  border: none; /* 테두리 제거 */\r\n  border-radius: 25px;\r\n  width: auto; /* 너비를 자동으로 설정 */\r\n}\r\n\r\n/* 페이지 네이션 및 글쓰기 버튼 스타일 */\r\n.pagination-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 100px;\r\n  gap: 5px;\r\n}\r\n\r\n.pagination button {\r\n  background-color: #ffffff;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  margin: 0 5px;\r\n  border-radius: 5px;\r\n  font-size: 18px; /* 숫자의 폰트 크기 */\r\n  font-family: 'KB_s4', sans-serif; /* 숫자의 폰트 */\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #d5e9e3;\r\n  cursor: not-allowed;\r\n  color: white;\r\n}\r\n\r\n.pagination button.active {\r\n  background-color: #43c2a0;\r\n  color: white;\r\n}\r\n\r\n.pagination button.arrow-button {\r\n  font-size: 18px; /* 화살표의 폰트 크기 */\r\n}\r\n\r\n.write-button {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #ffffff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-size: 20px;\r\n  color: #000;\r\n  background-color: transparent;\r\n  margin-left: 89%; /* 왼쪽으로 이동 */\r\n  margin-bottom: 3vh;\r\n  font-family: 'KB_S5', sans-serif;\r\n}\r\n\r\n.write-button i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.write-button i.bi.bi-pencil {\r\n  color: #32ab8b;\r\n  font-size: 20px;\r\n}\r\n</style>\r\n","import { render } from \"./QnaListView.vue?vue&type=template&id=7085385d&scoped=true\"\nimport script from \"./QnaListView.vue?vue&type=script&lang=js\"\nexport * from \"./QnaListView.vue?vue&type=script&lang=js\"\n\nimport \"./QnaListView.vue?vue&type=style&index=0&id=7085385d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7085385d\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","key","ref","style","_hoisted_17","_hoisted_32","_createElementBlock","_hoisted_1","onClick","_cache","args","_ctx","handleClick","_hoisted_2","_withModifiers","$options","toggleCategory","_hoisted_3","$data","showCategory","_hoisted_4","_hoisted_5","$event","filterByCategory","_Fragment","_renderList","mileages","mileage","mile_no","mile_name","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_6","_createCommentVNode","_hoisted_9","_hoisted_10","filteredNotices","length","_hoisted_11","type","sortByDateAsc","onChange","handleCheckboxChange","_hoisted_12","_createTextVNode","_hoisted_13","isLoggedIn","loginInfo","user_is_admin","user_is_manager","isChecked","_hoisted_14","goToWritePage","_hoisted_15","_hoisted_16","searchQuery","placeholder","searchNotices","_hoisted_18","_hoisted_19","paginatedNotices","_hoisted_20","notice","notice_board_no","handleNoticeClick","_hoisted_22","is_new","_hoisted_23","display_num","_hoisted_24","_hoisted_25","_hoisted_26","notice_board_title","_hoisted_27","formatDate","notice_board_date","_hoisted_28","_hoisted_29","notice_board_hit","_hoisted_30","_hoisted_21","_hoisted_31","_hoisted_33","_hoisted_34","prevPage","disabled","currentPage","_hoisted_35","totalPages","page","goToPage","_normalizeClass","active","_hoisted_36","nextPage","_hoisted_37","data","notices","itemsPerPage","selectedCategory","isProcessing","sortByViews","computed","mapGetters","result","this","query","toLowerCase","filter","includes","notice_board_content","sort","a","b","Date","displayNum","map","isNew","getLoginInfo","getIsChecked","Math","ceil","start","end","slice","methods","dateString","today","noticeDate","differenceInTime","getTime","differenceInDays","sortType","closeDropdown","handleClickOutside","event","$refs","dropdownMenu","contains","target","categoryButton","$router","push","name","fetchNotices","console","log","response","api","get","error","message","fetchMileages","post","noticeIndex","findIndex","n","params","id","options","year","month","day","toLocaleDateString","mileName","refreshPage","mounted","document","addEventListener","beforeUnmount","removeEventListener","__exports__","render"],"sourceRoot":""}