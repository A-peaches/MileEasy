"use strict";(self["webpackChunkmile"]=self["webpackChunkmile"]||[]).push([[3944],{53944:function(e,t,s){s.r(t),s.d(t,{default:function(){return B}});var a=s(20641),r=s(90033),i=s(53751);const n=e=>((0,a.Qi)("data-v-6c38b7db"),e=e(),(0,a.jt)(),e),l={class:"button-container"},o=n((()=>(0,a.Lk)("span",{class:"arrow"},"❮",-1))),u={class:"bold-x-lg",style:{"font-family":"KB_C3"}},c={class:"mb-5"},m={style:{padding:"0 5%"}},d={style:{"text-align":"right"},class:"my-2"},g={class:"p-2 form-container",style:{"background-color":"#f6f6f6"}},h={key:0,class:"form-group"},p=n((()=>(0,a.Lk)("label",{class:"mt-3"},"기존 마일리지 정보",-1))),q={class:"styled-table"},k=n((()=>(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th",null,"마일리지 이름"),(0,a.Lk)("th",null,"연간 최고 한도"),(0,a.Lk)("th",null,"담당자")])],-1))),b={key:0},L=n((()=>(0,a.Lk)("br",null,null,-1))),f={key:1},_={class:"form-group"},y=n((()=>(0,a.Lk)("label",{class:"mt-3"},"마일리지 이름",-1))),R={class:"form-group"},w=n((()=>(0,a.Lk)("label",null,"마일리지 연간 최고 한도",-1))),v={class:"form-group"},C=n((()=>(0,a.Lk)("label",null,"담당자 설정",-1))),N={class:"form-group"},x=n((()=>(0,a.Lk)("label",null,"기타사항",-1))),E={key:1,style:{"text-align":"right",color:"red"}},M={class:"button-wrapper"};function A(e,t,s,n,A,D){return(0,a.uX)(),(0,a.CE)("div",{class:"cards page-back mx-auto",style:(0,r.Tr)({height:e.computedHeight})},[(0,a.Lk)("div",l,[(0,a.Lk)("button",{class:"back-button",onClick:t[0]||(t[0]=(...e)=>D.goBack&&D.goBack(...e))},[o,(0,a.eW)(" 이전 ")])]),(0,a.Lk)("h2",u,(0,r.v_)(D.mileageAction),1),(0,a.Lk)("h6",c,(0,r.v_)(D.formattedRequestDate)+" "+(0,r.v_)(D.userName)+"("+(0,r.v_)(D.userNo)+") ",1),(0,a.Lk)("div",m,[(0,a.Lk)("div",null,[(0,a.Lk)("div",d,[0===D.currentRequest.request_status?((0,a.uX)(),(0,a.CE)("span",{key:0,onClick:t[1]||(t[1]=e=>D.recive()),style:{cursor:"pointer"}}," 접수완료 ")):(0,a.Q3)("",!0),1===D.currentRequest.request_status?((0,a.uX)(),(0,a.CE)("span",{key:1,onClick:t[2]||(t[2]=e=>D.accept()),style:{cursor:"pointer"}}," 승인완료 ")):(0,a.Q3)("",!0),(0,a.eW)("  "),1===D.currentRequest.request_status?((0,a.uX)(),(0,a.CE)("span",{key:2,onClick:t[3]||(t[3]=e=>D.reject()),style:{cursor:"pointer"}}," 승인거절 ")):(0,a.Q3)("",!0)]),(0,a.Lk)("div",g,[2===this.currentRequest.request?((0,a.uX)(),(0,a.CE)("div",h,[p,(0,a.Lk)("table",q,[k,(0,a.Lk)("tbody",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,(0,r.v_)(A.currentMileage.mile_name),1),(0,a.Lk)("td",null,(0,r.v_)(A.currentMileage.mile_max),1),(0,a.Lk)("td",null,[A.admins?.length?((0,a.uX)(),(0,a.CE)("div",b,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(A.admins,(e=>((0,a.uX)(),(0,a.CE)("span",{key:e.user_no},[(0,a.eW)((0,r.v_)(e.user_name)+" ("+(0,r.v_)(e.user_no)+")",1),L])))),128))])):((0,a.uX)(),(0,a.CE)("div",f,"담당자 정보가 없습니다."))])])])])])):(0,a.Q3)("",!0),(0,a.Lk)("div",_,[y,(0,a.bo)((0,a.Lk)("input",{"onUpdate:modelValue":t[4]||(t[4]=e=>A.mileageName=e),type:"text",class:"input-base input-white"},null,512),[[i.Jo,A.mileageName]])]),(0,a.Lk)("div",R,[w,(0,a.bo)((0,a.Lk)("input",{"onUpdate:modelValue":t[5]||(t[5]=e=>A.mileageLimit=e),type:"text",class:"input-base input-white",readonly:""},null,512),[[i.Jo,A.mileageLimit]])]),(0,a.Lk)("div",v,[C,(0,a.bo)((0,a.Lk)("input",{"onUpdate:modelValue":t[6]||(t[6]=e=>A.manager=e),type:"text",class:"input-base input-white",readonly:""},null,512),[[i.Jo,A.manager]])]),(0,a.Lk)("div",N,[x,(0,a.bo)((0,a.Lk)("textarea",{"onUpdate:modelValue":t[7]||(t[7]=e=>A.additionalNotes=e),class:"input-base input-white"},null,512),[[i.Jo,A.additionalNotes]])]),this.currentRequest.register>=1?((0,a.uX)(),(0,a.CE)("div",E," 현재 건을 등록한 이력이 있습니다 ")):(0,a.Q3)("",!0),(0,a.Lk)("div",M,[1===D.currentRequest.request_status?((0,a.uX)(),(0,a.CE)("button",{key:0,class:"btn-yellow",onClick:t[8]||(t[8]=e=>D.ok())}," 등록 ")):(0,a.Q3)("",!0)])])])])],4)}var D=s(66278),I=s(37682),P=s(78465),X=s.n(P),V={name:"MileageRequestDetail",props:["mileage_request_no"],data(){return{mileageName:"",mileageLimit:"",manager:"",additionalNotes:"",admins:[],mileageLabels:[],currentMileage:""}},computed:{...(0,D.L8)("login",["getLoginInfo","getIsChecked"]),...(0,D.L8)("request",["getRequestList"]),loginInfo(){return this.getLoginInfo},requestNo(){return this.$route.params.mileage_request_no},currentRequest(){if(!this.getRequestList)return null;const e=String(this.requestNo);return this.getRequestList.find((t=>String(t.mileage_request_no)===e))},formattedRequestDate(){if(this.currentRequest&&this.currentRequest.mileage_request_date){const e=new Date(this.currentRequest.mileage_request_date);return e.toISOString().split("T")[0]}return""},userName(){return this.currentRequest?this.currentRequest.user_name:""},userNo(){return this.currentRequest?this.currentRequest.user_no:""},mileageAction(){if(this.currentRequest)switch(this.currentRequest.request){case 1:return"마일리지 추가";case 2:return"마일리지 수정";case 3:return"마일리지 삭제"}return"마일리지 정보"}},methods:{...(0,D.i0)("request",["requestList"]),goBack(){this.$router.go(-1)},async setFormData(){if(this.currentRequest&&(this.mileageName=this.currentRequest.request_mile_name||"",this.mileageLimit=this.currentRequest.request_mil_max||"",this.manager=this.currentRequest.request_admin||"",this.additionalNotes=this.currentRequest.request_etc||"",2===this.currentRequest.request)){try{const e=await I.A.post("/admin/getMileageAdminList",null,{params:{mile_no:this.currentRequest.mile_no}});console.log("당담자",e.data),this.admins=e.data||[]}catch(e){console.error("Error fetching admin list:",e),this.admins=[]}try{const e=await I.A.get("/mileage/getMileage");this.mileageLabels=e.data,this.currentRequest&&(this.currentMileage=this.mileageLabels.find((e=>e.mile_no===this.currentRequest.mile_no))),console.log("마일마일",e.data)}catch(e){console.error("Error fetching mileage labels:",e),this.mileageLabels=[]}}},ok(){if(this.currentRequest)switch(this.currentRequest.request){case 1:this.AddData();break;case 2:this.ModifyData();break;case 3:this.DeleteData();break}},async AddData(){this.currentRequest.request_is_branch?this.request_is_branch=1:this.request_is_branch=0;const e=new FormData;e.append("mileageName",this.mileageName),e.append("mileageLimit",this.mileageLimit),e.append("manager",this.manager),e.append("request_is_branch",this.request_is_branch),e.append("num",this.requestNo);try{const t=await I.A.post("/admin/addMileage",e,{headers:{"Content-Type":"multipart/form-data"}});console.log(t.data),X().fire({icon:"success",title:"성공",text:"요청이 성공적으로 완료되었습니다.",scrollbarPadding:!1}).then((e=>{e.isConfirmed&&(document.location="/mileageManagementView")}))}catch(t){console.error("Error submitting form:",t),t.response?(console.error("Error response:",t.response.data),console.error("Error status:",t.response.status),console.error("Error headers:",t.response.headers)):t.request?console.error("Error request:",t.request):console.error("Error message:",t.message),X().fire({icon:"error",title:"서버 오류",text:"요청을 완료하는 동안 오류가 발생했습니다. 나중에 다시 시도해 주세요.",scrollbarPadding:!1})}},async label(){try{const e=await I.A.get("/mileage/getMileage");this.mileageLabels=e.data}catch(e){console.error("Error fetching mileage labels:",e),this.mileageLabels=[]}},async ModifyData(){if(this.label(),this.mileageLabels.includes(this.mileageName)&&" "===!this.mileageName)X().fire({icon:"error",title:"오류",text:"이미 존재하는 마일리지 입니다.",scrollbarPadding:!1});else try{const e=await I.A.post("/admin/newAdminList",null,{params:{mile_no:this.currentRequest.mile_no,final_admin_list:this.manager,mileNameInput:this.mileageName,mileMax:this.mileageLimit,num:this.requestNo}});console.log(e.data),X().fire({icon:"success",title:"성공",text:"요청이 성공적으로 완료되었습니다.",scrollbarPadding:!1}).then((e=>{e.isConfirmed&&(document.location="/mileageManagementView")}))}catch(e){X().fire({icon:"error",title:"서버 오류",text:"요청을 완료하는 동안 오류가 발생했습니다. 나중에 다시 시도해 주세요.",scrollbarPadding:!1})}},async DeleteData(){try{const e=await I.A.post("/admin/DeleteData",null,{params:{mile_no:this.currentRequest.mile_no,num:this.requestNo}});console.log(e.data),X().fire({icon:"success",title:"성공",text:"마일리지 삭제가 처리되었습니다.",scrollbarPadding:!1}).then((e=>{e.isConfirmed&&(document.location="/mileageManagementView")}))}catch(e){X().fire({icon:"error",title:"서버 오류",text:"요청을 완료하는 동안 오류가 발생했습니다. 나중에 다시 시도해 주세요.",scrollbarPadding:!1})}},async accept(){try{const e=await I.A.post("/admin/accept",null,{params:{num:this.requestNo}});console.log(e.data),X().fire({icon:"success",title:"성공",text:"승인완료 처리되었습니다.",scrollbarPadding:!1}).then((e=>{e.isConfirmed&&(document.location="/mileageManagementView")}))}catch(e){X().fire({icon:"error",title:"서버 오류",text:"요청을 완료하는 동안 오류가 발생했습니다. 나중에 다시 시도해 주세요.",scrollbarPadding:!1})}},async reject(){try{const e=await I.A.post("/admin/reject",null,{params:{num:this.requestNo}});console.log(e.data),X().fire({icon:"success",title:"성공",text:"승인거절 처리되었습니다.",scrollbarPadding:!1}).then((e=>{e.isConfirmed&&(document.location="/mileageManagementView")}))}catch(e){X().fire({icon:"error",title:"서버 오류",text:"요청을 완료하는 동안 오류가 발생했습니다. 나중에 다시 시도해 주세요.",scrollbarPadding:!1})}},async recive(){try{const e=await I.A.post("/admin/recive",null,{params:{num:this.requestNo}});console.log(e.data),X().fire({icon:"success",title:"성공",text:"접수완료 처리되었습니다.",scrollbarPadding:!1}).then((e=>{e.isConfirmed&&(document.location="/mileageManagementView")}))}catch(e){X().fire({icon:"error",title:"서버 오류",text:"요청을 완료하는 동안 오류가 발생했습니다. 나중에 다시 시도해 주세요.",scrollbarPadding:!1})}},checkLoginInfo(){this.getLoginInfo&&!1!==this.getIsChecked&&!1!==this.getLoginInfo.user_is_admin||(window.location.href="/noAccess")}},async mounted(){await this.requestList(),this.setFormData()},created(){this.checkLoginInfo()}},Q=s(66262);const j=(0,Q.A)(V,[["render",A],["__scopeId","data-v-6c38b7db"]]);var B=j}}]);
//# sourceMappingURL=3944.39f187be.js.map