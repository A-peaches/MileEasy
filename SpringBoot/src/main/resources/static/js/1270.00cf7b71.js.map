{"version":3,"file":"js/1270.00cf7b71.js","mappings":"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","sources":["webpack://mile/./src/views/user/main/AdminMainView.vue","webpack://mile/./src/views/adminMileEasy/main/PageCount.vue","webpack://mile/./src/views/adminMileEasy/main/PageCount.vue?774d","webpack://mile/./src/views/adminMileEasy/main/MileagePageCount.vue","webpack://mile/./src/views/adminMileEasy/main/MileagePageCount.vue?c9c8","webpack://mile/./src/views/adminMileEasy/main/PositionChart.vue","webpack://mile/./src/views/adminMileEasy/main/PositionChart.vue?512d","webpack://mile/./src/views/user/main/AdminMainView.vue?7b1a"],"sourcesContent":["<template>\r\n  <div class=\"flex\" style=\"margin-left: 10%; margin-right: 10%\">\r\n    <div class=\"left-container\">\r\n\r\n      <!-- 여기 프로필 -->\r\n      <div key=\"profile\" class=\"cards fade-up-item profile-card\"\r\n      >\r\n        <img\r\n          v-if=\"loginInfo && loginInfo.user_no\"\r\n          :src=\"profileImageUrl\"\r\n          class=\"profile-large my-3\"\r\n          alt=\"Profile Picture\"\r\n          @error=\"setDefaultImage\"\r\n        />\r\n        <h2 class=\"lg KB_S4 my-3\">{{ loginInfo ? loginInfo.user_name : '' }}</h2>\r\n        <p class=\"md\" style=\"margin-bottom: 0px\">\r\n          {{\r\n            loginInfo\r\n              ? `${loginInfo.level_no || ''} ${loginInfo.position_no || ''} | ${loginInfo.job_no || ''} 직무`\r\n              : ''\r\n          }}\r\n        </p>\r\n        <p class=\"md mb-2\" style=\"margin-bottom: 0px\">\r\n          {{ loginInfo ? `${loginInfo.dp_no}` : '' }}\r\n        </p>\r\n        <button class=\"btn-yellow KB_C2 my-3\" disabled>운영 관리자</button>\r\n      </div>\r\n\r\n      <!-- 여기 메뉴 -->\r\n      <div class=\"cards fade-up-item menu-card\">\r\n        <div style=\"padding: 3% 0%\">\r\n          <a href=\"/kingTopAdminView\" class=\"mileage-link\">\r\n            <p class=\"lg2 link-text\" style=\"text-align: left\">\r\n              마왕관리\r\n              <i\r\n                class=\"bi bi-chevron-compact-right icon-right\"\r\n                style=\"margin-left: auto\"\r\n              ></i>\r\n            </p>\r\n          </a>\r\n          <a href=\"/mileageAddAdminView\" class=\"mileage-link\">\r\n            <p class=\"lg2 link-text\" style=\"text-align: left\">\r\n              마일리지 관리\r\n              <i\r\n                class=\"bi bi-chevron-compact-right icon-right\"\r\n                style=\"margin-left: auto\"\r\n              ></i>\r\n            </p>\r\n          </a>\r\n          <a href=\"/m_TipMainAdminView\" class=\"mileage-link\">\r\n            <p class=\"lg2 link-text\" style=\"text-align: left\">\r\n              M-TIP\r\n              <i\r\n                class=\"bi bi-chevron-compact-right icon-right\"\r\n                style=\"margin-left: auto\"\r\n              ></i>\r\n            </p>\r\n          </a>\r\n          <a href=\"/noticeListView\" class=\"mileage-link\">\r\n            <p class=\"lg2 link-text\" style=\"text-align: left\">\r\n              공지사항\r\n              <i\r\n                class=\"bi bi-chevron-compact-right icon-right\"\r\n                style=\"margin-left: auto\"\r\n              ></i>\r\n            </p>\r\n          </a>\r\n          <!-- <a href=\"/qnaListView\" class=\"mileage-link\">\r\n            <p class=\"lg2 link-text\" style=\"text-align: left\">\r\n              QnA\r\n              <i\r\n                class=\"bi bi-chevron-compact-right icon-right\"\r\n                style=\"margin-left: auto\"\r\n              ></i>\r\n            </p>\r\n          </a> -->\r\n          <a href=\"/mileEasyContactView\" class=\"mileage-link\">\r\n            <p class=\"lg2 link-text\" style=\"text-align: left\">\r\n              업무별 연락처\r\n              <i\r\n                class=\"bi bi-chevron-compact-right icon-right\"\r\n                style=\"margin-left: auto\"\r\n              ></i>\r\n            </p>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"right-container\">\r\n      <PageCount class=\"fade-up-item\" />\r\n      <MileagePageCount class=\"fade-up-item\" style=\"margin-top: 5%\"/>\r\n      <PositionChart class=\"fade-up-item\" style=\"margin-top: 5%\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport moment from 'moment'; // moment.js import\r\nimport Swal from 'sweetalert2';\r\nimport PageCount from '@/views/adminMileEasy/main/PageCount.vue';\r\nimport MileagePageCount from '@/views/adminMileEasy/main/MileagePageCount.vue';\r\nimport PositionChart from '@/views/adminMileEasy/main/PositionChart.vue';\r\n\r\nexport default {\r\n  name: 'AdminMainView',\r\n  components: { PageCount, MileagePageCount, PositionChart },\r\n\r\n  computed: {\r\n    ...mapGetters('login', ['getLoginInfo']),\r\n    profileImageUrl() {\r\n      if (this.loginInfo && this.loginInfo.user_no) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          return `${process.env.VUE_APP_API_URL}/profile/${this.loginInfo.user_no}.jpg`;\r\n        } else {\r\n          return `/profile/${this.loginInfo.user_no}.jpg`;\r\n        }\r\n      }\r\n      return ''; // 또는 기본 이미지 URL\r\n    },\r\n    loginInfo() {\r\n      return this.getLoginInfo;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.checkFirstBusinessDay();\r\n\r\n    this.$nextTick(() => {\r\n      const items = this.$el.querySelectorAll('.fade-up-item');\r\n      items.forEach((item, index) => {\r\n        item.style.setProperty('--index', index);\r\n        item.style.setProperty('z-index', 10 - index); // z-index 설정\r\n        setTimeout(() => {\r\n          item.classList.add('fade-up-active');\r\n        }, 100 * index); // 각 아이템마다 지연 시간을 다르게 설정\r\n      });\r\n    });\r\n  },\r\n  methods: {\r\n    setDefaultImage(event) {\r\n      event.target.src = require('@/assets/img/test.png');\r\n    },\r\n    setTransitionDelay(el, index) {\r\n      el.style.setProperty('--index', index);\r\n    },\r\n\r\n    checkFirstBusinessDay() {\r\n      // 현재 날짜를 moment 객체로 가져오기\r\n      const currentDate = moment();\r\n\r\n      // 이번 달의 첫 번째 영업일을 구하기 위해 반복문 사용\r\n      let currentDay = currentDate.clone();\r\n      while (currentDay.month() === currentDate.month()) {\r\n        // 토요일(6) 또는 일요일(0)이 아닌 경우에만 첫 번째 영업일로 처리\r\n        if (currentDay.day() !== 0 && currentDay.day() !== 6) {\r\n          if (currentDay.date() === 0) {\r\n            // 첫 번째 영업일이면 알림 표시\r\n            Swal.fire({\r\n              icon: 'info',\r\n              title: '알림',\r\n              text: '마왕 채택일입니다. 채택을 진행해주세요.',\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                window.location.href = '/kingMain';\r\n              }\r\n            });\r\n            break;\r\n          }\r\n        }\r\n        currentDay.add(1, 'day');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.flex {\r\n  display: flex;\r\n}\r\n\r\n.left-container {\r\n  width: 26%;\r\n  position: -webkit-sticky; /* Safari */\r\n  position: sticky;\r\n  top: 0;\r\n  height: 100vh;\r\n}\r\n\r\n.right-container {\r\n  width: 70%;\r\n  margin-left: 4%;\r\n}\r\n\r\n.profile-card {\r\n  height: 430px;\r\n  width: 370px;\r\n}\r\n\r\n.menu-card {\r\n  width: 370px;\r\n  height: 360px;\r\n  padding: 10%;\r\n  margin-top: 11%;\r\n}\r\n\r\n.mileage-link {\r\n  text-decoration: none;\r\n  color: #4b4a4a;\r\n}\r\n\r\n.mileage-link:hover > p {\r\n  color: #848282;\r\n}\r\n\r\n.link-text {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 2%;\r\n  width: 100%;\r\n}\r\n\r\n.icon-right {\r\n  margin-left: auto;\r\n}\r\n\r\n.fade-up-item {\r\n  opacity: 0;\r\n  transform: translateY(20px);\r\n  transition: all 0.5s ease-out;\r\n  transition-delay: calc(var(--index) * 100ms);\r\n  position: relative; /* z-index가 작동하도록 */\r\n}\r\n\r\n.fade-up-active {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"cards\" style=\"background-color: #f9f9f9; height: 420px; \">\r\n    <p class=\"text-left lg2 KB_C2 ml-2\">페이지 방문자 수 &nbsp;\r\n      <i class=\"bi bi-download\" @click=\"downloadChart\"></i>\r\n    </p>\r\n    <div class=\"cards\" style=\"height : 330px;\">\r\n      <div class=\"date-container\">\r\n        <div class=\"dateround\">\r\n          <input type=\"date\" class=\"date\" id=\"startDate\" v-model=\"startDate\" @change=\"updateCharts\" />\r\n          -\r\n          <input type=\"date\" class=\"date\" id=\"endDate\" v-model=\"endDate\" @change=\"updateCharts\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"content-container mr-5\">\r\n        <div class=\"chartBox ml-3\" >\r\n          <canvas :id=\"chartIds[0]\" style=\"height:280px; width: 450px; \"></canvas>\r\n        </div>\r\n        <div class=\"stats-container\">\r\n  <div class=\"stat-row\" style=\"margin-top : 25px\">\r\n    <div class=\"stat-item\">\r\n      <i class=\"bi bi-display\"></i>\r\n      <span class=\"stat-label\">총 방문자 수</span>\r\n      <div class=\"stat-value\">{{ total }}</div>\r\n    </div>\r\n    <div class=\"stat-item\">\r\n      <i class=\"bi bi-reception-4\"></i>\r\n      <span class=\"stat-label\">최고 방문자 수</span>\r\n      <div class=\"stat-value\">{{ maxcount }}</div>\r\n    </div>\r\n    <div class=\"stat-item\">\r\n      <i class=\"bi bi-reception-2\"></i>\r\n      <span class=\"stat-label\">최소 방문자 수</span>\r\n      <div class=\"stat-value\">{{ mincount }}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n      </div>\r\n    </div>\r\n    <div  class=\"text-end w-100 mt-5\">\r\n         <span  style=\"\r\n                    position: absolute;\r\n                    top: 87%;\r\n                    right : -50px;\r\n                    transform: translateX(-50%);\r\n                    z-index: 0;\r\n                    \r\n                  font-size:10pt; color:gray;\">( 최대 조회 가능일 : 전영업일 )</span>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport Swal from 'sweetalert2';\r\nimport api from '@/api/axios';\r\nimport * as XLSX from 'xlsx';\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  name: 'PageCount',\r\n  data() {\r\n    return {\r\n      startDate: '',\r\n      endDate: '',\r\n      total: 0,\r\n      maxcount: 0,\r\n      mincount: 0,\r\n      charts: {}, // 차트 인스턴스를 저장할 객체\r\n      chartIds: ['Chart1'], // 각 차트에 대한 고유 ID\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.setDefaultDates();\r\n    this.updateCharts(); // Ensure chart rendering happens after setting dates\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters('login', ['getLoginInfo']),\r\n    ...mapActions('loginHistory', ['loginHistoryCountArray']),\r\n    loginInfo() {\r\n      return this.getLoginInfo;\r\n    },\r\n  },\r\n  methods: {\r\n    async downloadChart() {\r\n      try{\r\n        const counts = await this.chartDataCount();\r\n        const dates = this.weekDays();\r\n\r\n        const wsData = [['날짜', '방문자 수']]; // 엑셀 파일의 첫번째 행에 컬럼명을 추가\r\n        dates.forEach((date, index) => {\r\n          wsData.push([date, counts[index] || 0]);\r\n        });\r\n\r\n        const worksheet = XLSX.utils.aoa_to_sheet(wsData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n\r\n        XLSX.writeFile(workbook, 'chart_data.xlsx'); // 엑셀 파일 다운로드 \r\n      }catch (error) {\r\n        console.error('Error downloading chart data:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: '차트 데이터 다운로드 중 오류가 발생했습니다.',\r\n        });\r\n      }\r\n    },\r\n    setDefaultDates() {\r\n      const today = new Date();\r\n      const endDate = new Date(today);\r\n      endDate.setDate(today.getDate() - 1); // Set endDate to yesterday\r\n      const endDateFormatted = endDate.toISOString().split('T')[0]; // Format 'YYYY-MM-DD'\r\n\r\n      today.setDate(today.getDate() - 7);\r\n      const startDate = today.toISOString().split('T')[0]; // Format 'YYYY-MM-DD'\r\n\r\n      this.startDate = startDate;\r\n      this.endDate = endDateFormatted;\r\n\r\n      // Set the max attribute for endDate input to yesterday\r\n      const endDateInput = document.getElementById('endDate');\r\n      endDateInput.setAttribute('max', endDateFormatted);\r\n    },\r\n    async updateCharts() {\r\n      if (new Date(this.startDate) > new Date(this.endDate)) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: '시작 날짜는 종료 날짜보다 이전이어야 합니다.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const counts = await this.chartDataCount();\r\n        this.total = counts.reduce((acc, cur) => acc + cur, 0);\r\n        this.maxcount = Math.max(...counts);\r\n        this.mincount = Math.min(...counts);\r\n        this.renderCharts(counts);\r\n      } catch (error) {\r\n        console.error('Error fetching login history:', error);\r\n      }\r\n    },\r\n    async chartDataCount() {\r\n      const start = this.startDate.trim();\r\n      const end = this.endDate.trim();\r\n\r\n      try {\r\n        const response = await api.post(\r\n          '/user/loginHistoryCountArray',\r\n          null,\r\n          {\r\n            params: {\r\n              startDate: start,\r\n              endDate: end,\r\n            },\r\n          }\r\n        );\r\n        console.log('Response data:', response.data);\r\n        const counts = response.data.map((item) => item.count);\r\n        console.log('결과:', counts);\r\n        return counts;\r\n      } catch (error) {\r\n        console.error('Error fetching login history:', error);\r\n        return [];\r\n      }\r\n    },\r\n    renderCharts(counts) {\r\n    \r\n\r\n      this.chartIds.forEach((chartId) => {\r\n        const canvas = document.getElementById(chartId);\r\n        const ctx = document.getElementById(chartId)?.getContext('2d');\r\n\r\n        if (!ctx) {\r\n          console.error(`Canvas element with id '${chartId}' not found.`);\r\n          return;\r\n        }\r\n\r\n        if (this.charts[chartId]) {\r\n          this.charts[chartId].destroy();\r\n        }\r\n\r\n        // 디바이스 픽셀 비율 설정\r\n    const dpr = window.devicePixelRatio || 1;\r\n    canvas.style.width = '450px';\r\n    canvas.style.height = '280px';\r\n\r\n\r\n        this.charts[chartId] = new Chart(ctx, {\r\n          type: 'line',\r\n          data: {\r\n            labels: this.weekDays(),\r\n            datasets: [\r\n              {\r\n                label: `visit count`,\r\n                borderColor: '#FFCC00',\r\n                data: counts,\r\n                tension: 0.3, // Line tension to round the line edges\r\n                borderRadius: 5, // Border radius to round the line edges\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        devicePixelRatio: dpr,\r\n            plugins: {\r\n              legend: {\r\n                display: true,\r\n              },\r\n              title: {\r\n                display: false,\r\n              },\r\n            },\r\n            scales: {\r\n              y: {\r\n                ticks: {\r\n                  display: true,\r\n                },\r\n                grid: {\r\n                  display: true,\r\n                },\r\n              },\r\n              x: {\r\n                grid: {\r\n                  display: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        });\r\n      });\r\n    },\r\n    weekDays() {\r\n      const daysArray = [];\r\n      const start = new Date(this.startDate);\r\n      const end = new Date(this.endDate);\r\n\r\n      for (\r\n        let date = new Date(start);\r\n        date <= end;\r\n        date.setDate(date.getDate() + 1)\r\n      ) {\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        daysArray.push(`${month}.${day}`);\r\n      }\r\n\r\n      return daysArray;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n.layout-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n\r\n.content-container {\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: visible; /* 부모 요소에서 오버플로우를 허용 */\r\n}\r\n\r\n.chartBox {\r\n  flex: 2;\r\n  padding-right: 20px;\r\n\r\n  overflow: visible; /* 차트 요소에서 오버플로우를 허용 */\r\n  position: relative; /* 상대 위치 */\r\n  top: -50px; /* 원하는 만큼 위로 올리기 */\r\n}\r\n.stats-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.stat-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.date-container {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n\r\n.date {\r\n  border: 1px solid #cecece;\r\n  border-radius: 8px;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center; /* 수직 가운데 정렬 */\r\n  align-items: center; /* 수평 가운데 정렬 */\r\n  flex: 1;\r\n  background-color: #f8f9fa;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  margin-right: 10px;\r\n  height: 160px;\r\n  width: 130px;\r\n}\r\n\r\n.stat-item:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\n\r\n.stat-item i {\r\n  font-size: 1.5rem;\r\n  color: #55B88E;\r\n  margin-bottom: 5px;\r\n  font-size : 20pt;\r\n}\r\n\r\n.stat-label {\r\n  display: block;\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n  margin-bottom: 2px;\r\n  font-size : 12pt;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n.favorite-card {\r\n  width: 100%;\r\n  height: 350px;\r\n  overflow: hidden;\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n}\r\n\r\n.chartBox canvas {\r\n  width: 450px !important;\r\n  height: 280px !important;\r\n}\r\n\r\n.bi-download:hover {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n","import { render } from \"./PageCount.vue?vue&type=template&id=08f58799&scoped=true\"\nimport script from \"./PageCount.vue?vue&type=script&lang=js\"\nexport * from \"./PageCount.vue?vue&type=script&lang=js\"\n\nimport \"./PageCount.vue?vue&type=style&index=0&id=08f58799&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-08f58799\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"cards\" style=\"background-color: #f9f9f9; height: 430px;\">\r\n    <div>\r\n      <p class=\"text-left lg2 KB_C2\">마일리지 방문자 수 &nbsp;\r\n        <i class=\"bi bi-download\" @click=\"downloadChart\"></i>\r\n      </p>\r\n      <div class=\"cards favorite-card\" style=\"height: 335px;\">\r\n        <div class=\"text-right\">\r\n          <input\r\n            type=\"date\"\r\n            class=\"date\"\r\n            id=\"date\"\r\n            v-model=\"date\"\r\n            :max=\"maxDate\"\r\n            @change=\"updateCharts2\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div class=\"sub\">\r\n          <div class=\"chart-container\">\r\n            <canvas :id=\"mileChartId[0]\" class=\"chartMile\"></canvas>\r\n          </div>\r\n          <div class=\"best\">\r\n            <!-- <img\r\n              src=\"@/assets/imoji/kolly/콜리얼굴최고.png\"\r\n              style=\"width: 80px; height: 80px\"\r\n            /> -->\r\n            <div class=\"best-info\">\r\n              <div class=\"lg2 best-title\">\r\n                <i class=\"bi bi-hand-thumbs-up-fill\" style=\"font-size : 22pt\"></i>           \r\n                <p class=\"lg best-name\" style=\"font-size : 17pt\">\r\n                   {{ best }}\r\n               </p>\r\n              <br>\r\n                <i class=\"bi bi-hand-thumbs-down-fill\" style=\"font-size : 22pt\"></i>           \r\n                <p class=\"lg best-name\" style=\"font-size : 17pt\">\r\n                   {{ worst }}\r\n               </p>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div  class=\"text-end w-100 mt-5\">\r\n         <span  style=\"\r\n                    position: absolute;\r\n                    top: 87%;\r\n                    right : -50px;\r\n                    transform: translateX(-50%);\r\n                    z-index: 0;\r\n                    \r\n                  font-size:10pt; color:gray;\">( 최대 조회 가능일 : 전영업일 )</span>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport api from '@/api/axios';\r\nimport Swal from 'sweetalert2';\r\nimport * as XLSX from 'xlsx';\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  name: 'MileagePageCount',\r\n  data() {\r\n    return {\r\n      mileChart: {}, // 차트 객체를 저장할 객체\r\n      date: '', // 날짜 값을 저장할 변수\r\n      mileChartId: ['MileChart'], // 랜덤 문자열로 유니크 ID 생성\r\n      todayDate: new Date().toISOString().split('T')[0], // 오늘 날짜를 ISO 문자열로 저장\r\n      best: '-', // 초기값 설정\r\n      worst: '-', // 초기값 설정\r\n    };\r\n  },\r\n  computed: {\r\n    maxDate() {\r\n      const today = new Date();\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(today.getDate() - 1);\r\n      return yesterday.toISOString().split('T')[0]; // 하루 전 날짜를 ISO 문자열로 반환\r\n    },\r\n    ...mapGetters('login', ['getLoginInfo']),\r\n    loginInfo() {\r\n      return this.getLoginInfo;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async downloadChart() {\r\n      try{\r\n        const { hitCounts} = await this.realChartData();\r\n        const mileageLabels = await this.label(); \r\n        const date = this.date;\r\n\r\n        const wsData = [['기준일자', '마일리지', '방문자 수']]; // 엑셀 파일의 첫번째 행에 컬럼명을 추가\r\n        wsData.push([date]);\r\n        mileageLabels.forEach((mileage, index) => {\r\n          wsData.push([\r\n            '',\r\n            mileage,\r\n            hitCounts[index] || 0,\r\n          ]);\r\n        });\r\n\r\n        const worksheet = XLSX.utils.aoa_to_sheet(wsData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n\r\n        XLSX.writeFile(workbook, `mileage_visitors_data_${date}.xlsx`); // 엑셀 파일 다운로드 \r\n      }catch (error) {\r\n        console.error('Error downloading mileage_visitors data:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: '차트 데이터 다운로드 중 오류가 발생했습니다.',\r\n        });\r\n      }\r\n    },\r\n    async updateCharts2() {\r\n      try {\r\n        const { hitCounts } = await this.realChartData();\r\n        const mileageLabel = await this.label(); // 라벨 데이터 비동기 호출\r\n\r\n      \r\n        this.findMaxAndMinAndSet(hitCounts, mileageLabel);\r\n\r\n        // 차트 렌더링\r\n        this.renderChart2(hitCounts, mileageLabel);\r\n      } catch (error) {\r\n        console.error('Error fetching chart data:', error);\r\n      }\r\n    },\r\n\r\n    async label() {\r\n      try {\r\n        const response = await api.get('/mileage/getMileage');\r\n        const mileageLabel = response.data.map((item) => item.mile_name);\r\n        return mileageLabel;\r\n      } catch (error) {\r\n        console.error('Error fetching mileage labels:', error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n      }\r\n    },\r\n\r\n    async realChartData() {\r\n      try {\r\n        const response = await api.post('/mileage/hit_mileChartDATE', { date: this.date }); // POST 본문에 데이터 포함\r\n\r\n        // Check if response.data is valid and an array\r\n        if (!response.data || !Array.isArray(response.data)) {\r\n          throw new Error('Invalid response data format');\r\n        }\r\n\r\n        const hitCounts = response.data.map((item) => item.hit_count);\r\n        console.log('마일리지 결과', hitCounts);\r\n\r\n        return { hitCounts };\r\n      } catch (error) {\r\n        console.error('Error fetching chart data:', error);\r\n        return { hitCounts: [] }; // 에러 발생 시 빈 배열 반환\r\n      }\r\n    },\r\n\r\n    findMaxAndMinAndSet(hitCounts, mileageLabel) {\r\n  if (hitCounts.length === 0 || mileageLabel.length === 0) {\r\n    this.best = '-';\r\n    this.worst = '-';\r\n    return;\r\n  }\r\n\r\n  let maxIndex = 0;\r\n  let minIndex = 0;\r\n  let maxValue = hitCounts[0];\r\n  let minValue = hitCounts[0];\r\n\r\n  for (let i = 1; i < hitCounts.length; i++) {\r\n    if (hitCounts[i] > maxValue) {\r\n      maxValue = hitCounts[i];\r\n      maxIndex = i;\r\n    }\r\n    if (hitCounts[i] < minValue || (hitCounts[i] === minValue && hitCounts[i] !== 0)) {\r\n      minValue = hitCounts[i];\r\n      minIndex = i;\r\n    }\r\n  }\r\n\r\n  this.best = mileageLabel[maxIndex];\r\n  this.worst = mileageLabel[minIndex];\r\n\r\n  console.log('Best:', this.best, 'Worst:', this.worst, 'Max Value:', maxValue, 'Min Value:', minValue); // 디버깅용 로그\r\n},\r\n\r\n    renderChart2(counts, mileageLabel) {\r\n      const chartId = this.mileChartId[0]; // chartIds 배열에서 첫 번째 chartId를 가져옴\r\n      const ctx = document.getElementById(chartId);\r\n\r\n      if (!ctx) {\r\n        console.error(`Canvas element with id '${chartId}' not found.`);\r\n        return;\r\n      }\r\n\r\n      // 이전에 생성된 차트 객체가 있다면 파괴\r\n      if (this.mileChart[chartId]) {\r\n        this.mileChart[chartId].destroy();\r\n      }\r\n\r\n      try {\r\n        this.mileChart[chartId] = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: mileageLabel,\r\n            datasets: [\r\n              {\r\n                label: '방문자 수',\r\n                data: counts,\r\n                backgroundColor: [\r\n                  'rgba(155, 241, 218,0.8)', // 연한 녹색\r\n                  'rgba(255, 235, 163,0.8)',  // 연한 노란색\r\n                  'rgba(216,216,216,0.8)', // 연한 회색\r\n                ],\r\n                borderColor: [\r\n                'rgba(155, 241, 218,1)', // 연한 녹색\r\n                  'rgba(255, 235, 163,1)',  // 연한 노란색\r\n                  'rgba(216,216,216,1)', // 연한 회색\r\n                ],\r\n                borderWidth: 1,\r\n                barThickness: 40, // 막대 두께 줄임\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            plugins: {\r\n              legend: {\r\n                display: false,\r\n              },\r\n            },\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n                ticks: {\r\n                  display: true,\r\n                },\r\n                grid: {\r\n                  drawBorder: false,\r\n                  display: true,\r\n                },\r\n              },\r\n              x: {\r\n                grid: {\r\n                  drawBorder: false,\r\n                  display: false,\r\n                },\r\n              },\r\n            },\r\n            layout: {\r\n              padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n              },\r\n            },\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error('Error rendering chart:', error);\r\n      }\r\n    },\r\n    setInitialDate() {\r\n      const today = new Date();\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(today.getDate() - 1);\r\n\r\n      const formattedDate = yesterday.toISOString().split('T')[0];\r\n\r\n      this.date = formattedDate; // 날짜 초기화\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.setInitialDate(); // 날짜 입력 필드 초기화\r\n    this.updateCharts2(); // 초기 차트 렌더링\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.favorite-card {\r\n  width: 100%;\r\n  height: 300px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.sub {\r\n  display: flex;\r\n  position: relative;\r\n}\r\n\r\n.chart-container {\r\n  flex: 2;\r\n  height: 280px;\r\n  padding-left: 15px;\r\n  overflow: visible; /* 부모 요소에서 오버플로우를 허용 */\r\n}\r\n\r\n.best {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  overflow: visible; /* 부모 요소에서 오버플로우를 허용 */\r\n}\r\n\r\n.best-info {\r\n  text-align: center;\r\n  overflow: visible; /* 차트 요소에서 오버플로우를 허용 */\r\n  position: relative; /* 상대 위치 */\r\n  top: -18px; /* 원하는 만큼 위로 올리기 */\r\n}\r\n\r\n.best-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.best-name {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.bi-hand-thumbs-up-fill {\r\n  color: #FFD700;\r\n}\r\n\r\n.bi-hand-thumbs-down-fill {\r\n  color: #ffea74;\r\n}\r\n\r\n.chartMile {\r\n  overflow: visible; /* 차트 요소에서 오버플로우를 허용 */\r\n  position: relative; /* 상대 위치 */\r\n  top: -50px; /* 원하는 만큼 위로 올리기 */\r\n}\r\n.date {\r\n  border: 1px solid #cecece;\r\n  border-radius: 8px;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* 차트 스타일 수정 */\r\n.chartMile {\r\n  max-width: 100%;\r\n  height: 100% !important;\r\n}\r\n\r\n.bi-download:hover {\r\n  cursor: pointer;\r\n}\r\n</style>","import { render } from \"./MileagePageCount.vue?vue&type=template&id=cb0355e2&scoped=true\"\nimport script from \"./MileagePageCount.vue?vue&type=script&lang=js\"\nexport * from \"./MileagePageCount.vue?vue&type=script&lang=js\"\n\nimport \"./MileagePageCount.vue?vue&type=style&index=0&id=cb0355e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cb0355e2\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"cards\" style=\"background-color: #f9f9f9; height: 430px; padding: 20px;\">\r\n    <div>\r\n      <p class=\"text-left lg2 KB_C2\">직급별 방문자 수 &nbsp;\r\n        <i class=\"bi bi-download\" @click=\"downloadChart\"></i>\r\n      </p>\r\n      <div class=\"cards favorite-card\" style=\"height: 330px; display: flex; align-items: center;\">\r\n        <div class=\"sub\" style=\"width: 100%;\">\r\n          <div class=\"container2 mt-5\" style=\"width: 45%;\">\r\n            <canvas :id=\"positionChartId[0]\" class=\"positionchart\" style=\"height: 250px;\"></canvas>\r\n          </div>\r\n          <div class=\"chart-container mt-4\" style=\"width: 40%; padding-left: 20px;\">\r\n            <div class=\"text-right mb-5\">\r\n              <input\r\n                type=\"date\"\r\n                class=\"date\"\r\n                id=\"date\"\r\n                v-model=\"date\"\r\n                :max=\"maxDate\"\r\n                @change=\"updateCharts3\"\r\n              />\r\n            </div>\r\n            <div class=\"d-flex justify-content-center\" style=\"width:100%; margin-top :60px;\">\r\n              <table class=\"table table-sm custom-table ml-3\" style=\"width:80%\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>직급</th>\r\n                    <td>L0</td>\r\n                    <td>L1</td>\r\n                    <td>L2</td>\r\n                    <td>L3</td>\r\n                    <td>L4</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th>카운트</th>\r\n                    <td>{{ data[0] }}</td>\r\n                    <td>{{ data[1] }}</td>\r\n                    <td>{{ data[2] }}</td>\r\n                    <td>{{ data[3] }}</td>\r\n                    <td>{{ data[4] }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div  class=\"text-end w-100 mt-5\">\r\n         <span  style=\"\r\n                    position: absolute;\r\n                    top: 86%;\r\n                    right : -50px;\r\n                    transform: translateX(-50%);\r\n                    z-index: 0;\r\n                    \r\n                  font-size:10pt; color:gray;\">( 최대 조회 가능일 : 전영업일 )</span>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport api from \"@/api/axios\";\r\nimport * as XLSX from 'xlsx';\r\nimport Swal from 'sweetalert2';\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  name: \"PositionChart\",\r\n  data() {\r\n    return {\r\n      positionChart: {}, // 차트 객체를 저장할 객체\r\n      date: \"\", // 날짜 값을 저장할 변수\r\n      positionChartId: [\"PositionChart\"], // 랜덤 문자열로 유니크 ID 생성\r\n      todayDate: new Date().toISOString().split(\"T\")[0], // 오늘 날짜를 ISO 문자열로 저장\r\n      data: Array.from({ length: 5 }, () => \"-\"), // L0부터 L4까지 초기화된 데이터\r\n    };\r\n  },\r\n  computed: {\r\n    maxDate() {\r\n      const today = new Date();\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(today.getDate() - 1); // 하루 전 날짜를 구함\r\n      return yesterday.toISOString().split(\"T\")[0]; // ISO 문자열로 반환\r\n    },\r\n    ...mapGetters(\"login\", [\"getLoginInfo\"]),\r\n    loginInfo() {\r\n      return this.getLoginInfo;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async downloadChart() {\r\n      try{\r\n        const levelChartData = await this.realChartData();\r\n        const positionLabels = [\"L0\", \"L1\", \"L2\", \"L3\", \"L4\"]; \r\n        const date = this.date;\r\n\r\n        const wsData = [['기준일자', '직급별', '방문자 수']]; // 엑셀 파일의 첫번째 행에 컬럼명을 추가\r\n        wsData.push([date]);\r\n        positionLabels.forEach((position, index) => {\r\n          wsData.push([\r\n            '',\r\n            position,\r\n            levelChartData[index] || 0,\r\n          ]);\r\n        });\r\n\r\n        const worksheet = XLSX.utils.aoa_to_sheet(wsData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n\r\n        XLSX.writeFile(workbook, `position_visitors_data_${date}.xlsx`); // 엑셀 파일 다운로드 \r\n      }catch (error) {\r\n        console.error('Error downloading position_visitors data:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: '차트 데이터 다운로드 중 오류가 발생했습니다.',\r\n        });\r\n      }\r\n    },\r\n    async updateCharts3() {\r\n      try {\r\n        const levelChartData = await this.realChartData();\r\n        this.data = levelChartData; // 데이터 업데이트\r\n        this.renderChart3(levelChartData); // renderChart3 메서드 호출\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      }\r\n    },\r\n\r\n    async realChartData() {\r\n      try {\r\n        const response = await api.post(\r\n          \"/user/levelChartData\",\r\n          { date: this.date } // POST 요청에 날짜 데이터 포함\r\n        );\r\n\r\n        if (!response.data || !Array.isArray(response.data)) {\r\n          throw new Error(\"Invalid response data format\");\r\n        }\r\n\r\n        const levelChartData = response.data.map((item) => item.visitorCount);\r\n        console.log(\"원형차트 결과\", levelChartData);\r\n\r\n        return levelChartData;\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n        return []; // 에러 발생 시 빈 배열 반환\r\n      }\r\n    },\r\n\r\n    renderChart3(levelChartData) {\r\n      const chartId = this.positionChartId[0]; // 첫 번째 chartId 가져옴\r\n      const ctx = document.getElementById(chartId);\r\n\r\n      if (!ctx) {\r\n        console.error(`Canvas element with id '${chartId}' not found.`);\r\n        return;\r\n      }\r\n\r\n      // 이전에 생성된 차트 객체가 있다면 파괴\r\n      if (this.positionChart[chartId]) {\r\n        this.positionChart[chartId].destroy();\r\n      }\r\n\r\n      try {\r\n        this.positionChart[chartId] = new Chart(ctx, {\r\n          type: \"pie\",\r\n          data: {\r\n            labels: [\"L0\", \"L1\", \"L2\", \"L3\", \"L4\"],\r\n            datasets: [\r\n              {\r\n                data: levelChartData, // 실제 데이터로 변경\r\n                backgroundColor: [\r\n                  \"#FFAAE7\",\r\n                  \"#FFE78F\",\r\n                  \"#9FEDD1\",\r\n                  \"#B5EDFF\",\r\n                  \"#E4E4E4\",\r\n                ],\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            cutout: \"70%\",\r\n            plugins: {\r\n              legend: {\r\n                display: true,\r\n                position: \"right\", // 범례를 하단으로 이동\r\n                padding: 20, // 범례 항목에 20px의 패딩 추가\r\n              },\r\n            },\r\n          },\r\n          layout: {\r\n            padding: {\r\n              top: 20,\r\n              bottom: 30, // 하단에 30px의 여백 추가\r\n            },\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error rendering chart:\", error);\r\n      }\r\n    },\r\n\r\n    setInitialDate() {\r\n      const today = new Date();\r\n      const yesterday = new Date(today);\r\n      yesterday.setDate(today.getDate() - 1); // 하루 전 날짜로 설정\r\n\r\n      const formattedDate = yesterday.toISOString().split(\"T\")[0];\r\n\r\n      this.date = formattedDate; // 초기 날짜 설정\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.setInitialDate(); // 초기 날짜 설정\r\n    this.updateCharts3(); // 초기 차트 렌더링\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.favorite-card {\r\n  width: 100%;\r\n  height: 300px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n\r\n.container2 {\r\n  width: 40%;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  height: 100%;\r\n  bottom: 0;\r\n  width: 50%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.sub {\r\n  display: flex;\r\n}\r\n\r\n.cards {\r\n  overflow: hidden;\r\n}\r\n\r\n.bi-trophy-fill {\r\n  color: #ffca05;\r\n}\r\n\r\n.date {\r\n  border: 1px solid;\r\n  border-radius: 8px;\r\n  border-color: #cecece;\r\n}\r\n\r\n.positionchart {\r\n  margin-bottom: 50px;\r\n  width: 200px;\r\n}\r\n\r\n.custom-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  margin-bottom: 1rem;\r\n  background-color: #ffffff;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.custom-table th,\r\n.custom-table td {\r\n  padding: 0.8rem; /* 셀 안의 내용과 셀 사이의 여백 조정 */\r\n  text-align: center; /* 텍스트 가운데 정렬 */\r\n  border: 1px solid #dee2e6; /* 테이블 테두리 스타일 */\r\n}\r\n\r\n.custom-table th {\r\n  background-color: #f4f4f4; /* 테이블 헤더 배경색 */\r\n}\r\n\r\n.custom-table tbody tr:nth-child(odd) {\r\n  background-color: #f2f2f2; /* 짝수 번째 행 배경색 */\r\n}\r\n\r\n.custom-table tbody tr:hover {\r\n  background-color: #e2e2e2; /* 마우스 호버시 배경색 */\r\n}\r\n\r\n.custom-table thead th,\r\n.custom-table thead tr,\r\n.custom-table thead td,\r\n.custom-table tbody tr\r\n {\r\n  vertical-align: middle; /* 셀 내용 수직 가운데 정렬 */\r\n}\r\n\r\n.date {\r\n  border: 1px solid #cecece;\r\n  border-radius: 8px;\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.bi-download:hover {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import { render } from \"./PositionChart.vue?vue&type=template&id=7affa3c0&scoped=true\"\nimport script from \"./PositionChart.vue?vue&type=script&lang=js\"\nexport * from \"./PositionChart.vue?vue&type=script&lang=js\"\n\nimport \"./PositionChart.vue?vue&type=style&index=0&id=7affa3c0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7affa3c0\"]])\n\nexport default __exports__","import { render } from \"./AdminMainView.vue?vue&type=template&id=47b2c606&scoped=true\"\nimport script from \"./AdminMainView.vue?vue&type=script&lang=js\"\nexport * from \"./AdminMainView.vue?vue&type=script&lang=js\"\n\nimport \"./AdminMainView.vue?vue&type=style&index=0&id=47b2c606&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-47b2c606\"]])\n\nexport default __exports__"],"names":["class","style","key","_createElementVNode","disabled","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$options","loginInfo","user_no","src","profileImageUrl","alt","onError","_cache","args","setDefaultImage","_hoisted_4","_createCommentVNode","_hoisted_5","_toDisplayString","user_name","_hoisted_6","level_no","position_no","job_no","_hoisted_7","dp_no","_hoisted_8","_hoisted_9","_hoisted_10","_createVNode","_component_PageCount","_component_MileagePageCount","_component_PositionChart","_createTextVNode","onClick","downloadChart","type","id","$event","$data","startDate","onChange","updateCharts","endDate","chartIds","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","total","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","maxcount","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","mincount","_hoisted_23","Chart","register","registerables","name","data","charts","mounted","this","setDefaultDates","computed","mapGetters","mapActions","getLoginInfo","methods","counts","chartDataCount","dates","weekDays","wsData","forEach","date","index","push","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","error","console","Swal","icon","title","text","today","Date","setDate","getDate","endDateFormatted","toISOString","split","endDateInput","document","getElementById","setAttribute","reduce","acc","cur","Math","max","min","renderCharts","start","trim","end","response","api","post","params","log","map","item","count","chartId","canvas","ctx","getContext","destroy","dpr","window","devicePixelRatio","width","height","labels","datasets","label","borderColor","tension","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","scales","y","ticks","grid","x","daysArray","month","getMonth","day","__exports__","maxDate","updateCharts2","mileChartId","best","worst","mileChart","todayDate","yesterday","hitCounts","realChartData","mileageLabels","mileage","mileageLabel","findMaxAndMinAndSet","renderChart2","get","mile_name","Array","isArray","Error","hit_count","length","maxIndex","minIndex","maxValue","minValue","i","backgroundColor","borderWidth","barThickness","beginAtZero","drawBorder","layout","padding","left","right","top","bottom","setInitialDate","formattedDate","positionChartId","updateCharts3","positionChart","from","levelChartData","positionLabels","position","renderChart3","visitorCount","cutout","components","PageCount","MileagePageCount","PositionChart","checkFirstBusinessDay","$nextTick","items","$el","querySelectorAll","setProperty","setTimeout","classList","add","event","target","require","setTransitionDelay","el","currentDate","moment","currentDay","clone","then","result","isConfirmed","location","href","render"],"sourceRoot":""}