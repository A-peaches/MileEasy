{"version":3,"file":"js/6118.f02b742b.js","mappings":"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","sources":["webpack://mile/./node_modules/chart.js/dist/chart.js","webpack://mile/./node_modules/@kurkle/color/dist/color.esm.js","webpack://mile/./node_modules/chart.js/dist/chunks/helpers.segment.js"],"sourcesContent":["/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","obj","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","T","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","DoughnutController","animateRotate","animateScale","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","controllers","__proto__","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","defaults","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","isShort","g","hexParse","HUE_RE","hsl2rgbn","n","hsv2rgbn","hwb2rgbn","rgb","hueValue","rgb2hsl","calln","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","exec","deg","hslString","Z","Y","X","W","V","U","S","R","Q","O","N","M","L","K","G","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","ok","nk","parseInt","nameParse","RGB_RE","rgbParse","rgbString","rgb1","rgb2","modHSL","tmp","clone","fromObject","functionParse","Color","_rgb","_valid","c2","w2","w1","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","toString","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","toDimension","thisArg","each","loopable","_elementsEqual","a0","a1","klen","isValidKey","_merger","tval","sval","merge","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","_splitKey","part","_getKeyResolver","resolveObjectKey","_capitalize","toUpperCase","defined","isFunction","setsEqual","_isClickEvent","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","niceNum","roundedRange","niceRange","fraction","niceFraction","_factorize","isNumber","almostWhole","rounded","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","cmp","mid","_lookupByKey","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","_chartjs","object","unlistenArrayEvents","stub","_arrayUnique","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","debounce","timeout","clearTimeout","setTimeout","_toLeftRightCenter","_alignStartEnd","_textX","check","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","JSON","stringify","Intl","NumberFormat","formatNumber","num","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","Ticks","applyScaleDefaults","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","_measureText","longest","_longestText","arrayOfThings","thing","nestedThing","_alignPixel","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","_isPointInArea","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","renderText","strokeText","addRoundedRectPath","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","resolve","inputs","info","cacheable","_addGrace","minmax","keepZero","createContext","parentContext","_createResolver","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","_context","_subProxy","receiver","_resolveWithContext","_allKeys","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","splineCurveMonotone","slopeDelta","capControlPoint","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","paddings","borders","getContainerSize","containerStyle","containerBorder","containerPadding","clientHeight","round1","bbWidth","bbHeight","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","sub","findStartAndEnd","solidSegments","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","replacer"],"sourceRoot":""}