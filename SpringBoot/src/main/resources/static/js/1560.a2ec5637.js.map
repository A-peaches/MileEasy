{"version":3,"file":"js/1560.a2ec5637.js","mappings":"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","sources":["webpack://mile/./src/views/user/mileage/AI_ReportView.vue","webpack://mile/./node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js","webpack://mile/./src/views/user/mileage/AI_ReportView.vue?7a01","webpack://mile/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["<template>\r\n  <div class=\"cards page-back mx-auto\" style=\"color: #4b4a4a\">\r\n    <h2 class=\"bold-x-lg mt-5 mb-5 ml-5\" style=\"font-family: KB_C3\">\r\n      김근미님의 AI 리포트\r\n    </h2>\r\n\r\n    <div class=\"text-end mb-4 mr-3\">\r\n      <button class=\"btn-analysis\" @click=\"analysis\">AI 맞춤형 분석하기</button>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3 mb-4\">\r\n        <div class=\"card h-100 shadow-sm fade-in\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title text-goal\" style=\"font-size: 20pt\">\r\n              전체 순위\r\n            </h5>\r\n            <hr />\r\n            <p\r\n              class=\"mt-4\"\r\n              style=\"font-size: 35pt; font-family: 'KB_C1'; font-weight: 600\"\r\n            >\r\n              <span class=\"fs-4\">상위</span> 25%\r\n            </p>\r\n            <span class=\"addInfo\">( 순위 분석 기준일 : 2024.08.01 )</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md mb-4\">\r\n        <div class=\"card h-100 shadow-sm fade-in\">\r\n          <div class=\"card-body card-ml\">\r\n            <h5 class=\"text-primary text-start\" style=\"font-size: 20pt\">\r\n              AI 종합 분석\r\n            </h5>\r\n            <p class=\"text-start addInfo\">\r\n              * 마일이지 AI가 예측한 마일리지 추이와 점수를 토대로 앞으로의\r\n              마일리지 취득 전략을 제안해드립니다.\r\n            </p>\r\n            <div class=\"card-gray\">\r\n              <span>\r\n                <!-- 김근미님은 2024.08.01 기준으로 상위 25%에 해당하며, 전반적으로\r\n                우수한 성과를 보이고 있습니다. '연수 마일리지'와 'Monthly\r\n                Best'에 조금 더 집중하시면, 연말 평가에서 더욱 좋은 결과를\r\n                얻으실 수 있을 것으로 예상됩니다. -->\r\n                {{ all }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-5 mb-4\">\r\n        <div class=\"card h-100 shadow-sm fade-in\">\r\n          <div class=\"card-body\">\r\n            <canvas id=\"myChart1\" style=\"height: 30vh\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md mb-4\">\r\n        <div class=\"card h-100 shadow-sm fade-in\">\r\n          <div class=\"card-body card-ml\">\r\n            <h5 class=\"text-gray text-start\">순위 분석</h5>\r\n            <div class=\"card-gray\">\r\n              <span>\r\n                김근미님은 전체 직원 중 상위 25%에 위치해 있으며, 꾸준한\r\n                노력으로 상위권을 유지하고 계십니다. 다음 분기까지 'HotTip'\r\n                마일리지를 20점 추가로 획득하시면 귀하의 전체 순위가 5% 정도\r\n                상승할 것으로 예상됩니다.\r\n              </span>\r\n            </div>\r\n            <h5 class=\"text-gray text-start mt-4\">1등 추격 전략 🎯</h5>\r\n            <div class=\"card-gray\" style=\"text-align: start\">\r\n              <span>\r\n                현재 1등과의 점수 차이는 500점입니다. 연말까지 1등을 추격하려면\r\n                <span class=\"text-goal\">하루 평균 5.5점</span>\r\n                의 마일리지를 쌓으셔야 합니다.\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md mb-4\">\r\n        <div class=\"card h-100 shadow-sm fade-in\">\r\n          <div class=\"card-body card-ml\">\r\n            <h5 class=\"text-gray text-start\">마일리지별 분석</h5>\r\n            <p class=\"text-start addInfo\">\r\n              * 마일이지가 사용자의 포지션에 따라 분석한 결과로, 마일리지 가중치\r\n              및 연간 최대 한도를 고려하여 전략과 개선 사항을 제안해드립니다.\r\n            </p>\r\n            <div class=\"card-gray\">\r\n              <span>\r\n                김근미님이 속한 '경인지역영업' 그룹에서는 '리그 테이블'\r\n                마일리지의 가중치가 가장 높습니다. 이 활동에 집중하시면 더 빠른\r\n                마일리지 점수 상승이 가능할 것으로 보입니다. <br /><br />\r\n                다른 직원들에 비해 'BEST PG' 마일리지가 20% 낮은 편입니다. 이\r\n                영역에 조금 더 신경 쓰시면 전체 순위 상승에 도움이 될 것\r\n                같습니다.\r\n                <br /><br />\r\n                '소비자 지원' 부문에서 탁월한 성과를 보여주셨습니다. 김근미님의\r\n                꾸준한 노력과 소비자 지원에 대한 관심도가 전체 마일리지 평균\r\n                점수를 크게 향상시켰습니다. 이는 매우 가치 있는 기여입니다.\r\n                꾸준히 유지해주세요.\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-5 mb-4\">\r\n        <div class=\"card h-100 shadow-sm fade-in\">\r\n          <div class=\"card-body\">\r\n            <canvas id=\"myChart2\" style=\"height: 30vh\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md\">\r\n        <div\r\n          class=\"card shadow-sm mb-4 fade-in\"\r\n          style=\"background-color: #f5f5f5; border: #f5f5f5\"\r\n        >\r\n          <div class=\"card-body text-start card-ml\">\r\n            <h5 class=\"text-emphasis text-start\">\r\n              <i class=\"bi bi-info-circle-fill\"></i> 유의 사항\r\n            </h5>\r\n            <span class=\"ml-5\">\r\n              본 리포트는 마일이지 플랫폼에 축척된 데이터를 학습한 AI 모델의\r\n              예측에 기반하고 있습니다. <br\r\n            /></span>\r\n            <span class=\"ml-5\">\r\n              본 리포트는 마일리지 관리를 위한 참고 목적으로 활용할 수 있도록\r\n              제공되며, 증빙 등의 다른 목적으로는 사용할 수 없습니다.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport Chart from 'chart.js/auto';\r\nimport annotationPlugin from 'chartjs-plugin-annotation';\r\nimport api from '@/api/axios';\r\n\r\nChart.register(annotationPlugin);\r\n\r\nexport default {\r\n  name: 'AI_ReportView',\r\n\r\n  data() {\r\n    return {\r\n      all: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async aitest() {\r\n      try {\r\n        const response = await api.post('bot/chat', null, {\r\n          params: {\r\n            prompt:\r\n              '우리 회사 인사고과와 연결되는 마일리지 관리 사이트에서 어떤방법으로 마일리지를 취득해야 순위향상에 가장 효율적인지 길잡이를 제공하는 리포트 페이지' +\r\n              '이름은 김현지 이고, 오늘날짜 기준으로 연수마일리지 10점 소비자 지원 마일리지 50점이야  연수마일리지 전체 평균은 3점이고, 소비자 지원 마일리지 전체 평균은 4점이야. 상위15%에 해당돼' +\r\n              '전체적인 분석과  부족한 부분에 대해서 분석해줘 예시로 김근미님은 ~~~기준으로 상위 25%에 해당하며, 전반적으로 우수한 성과를 보이고 있습니다. ' +\r\n              \"연수 마일리지'와 'Monthly Best'에 조금 더 집중하시면,  연말 평가에서 더욱 좋은 결과를 얻으실 수 있을 것으로 예상됩니다. 이러한 형태로 가장 효율적으로 분석해줘, 예시 형태를 따라줘! 글자수150자 이내로 부탁해 제발 예시를 활용해!! 유눙한 ai비서처럼 말해줘\",\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        this.all = response.data;\r\n      } catch (error) {\r\n        console.error('Error during API request:', error);\r\n      }\r\n    },\r\n\r\n    analysis() {\r\n      this.analysisAlret();\r\n    },\r\n    analysisAlret() {\r\n      this.$swal({\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n        imageUrl: require('@/assets/img/analysis.gif'),\r\n        imageClass: 'custom-image-class',\r\n        scrollbarPadding: false,\r\n        title: '분석중..',\r\n        html: `${this.getLoginInfo.user_name}님의 마일리지를 분석중입니다`,\r\n        showCloseButton: true, // X 버튼 추가\r\n        didOpen: () => {\r\n          const popup = this.$swal.getPopup();\r\n          const image = this.$swal.getImage();\r\n          const title = popup.querySelector('.swal2-title');\r\n          const img = popup.querySelector('.swal2-image');\r\n\r\n          title.style.marginTop = '0'; // 타이틀 상단 마진 제거\r\n          title.style.paddingTop = '0'; // 타이틀 상단 패딩 제거\r\n\r\n          popup.style.height = '400px'; // 원하는 높이로 조정\r\n          img.style.margin = '15px auto 0px auto';\r\n          image.style.width = '200px';\r\n          image.style.height = 'auto';\r\n          image.style.padding = '0px 0px 0px 30px';\r\n\r\n          this.$swal.showLoading();\r\n        },\r\n      }).then((result) => {\r\n        if (result.dismiss === this.$swal.DismissReason.timer) {\r\n          console.log('I was closed by the timer');\r\n        } else if (result.dismiss === this.$swal.DismissReason.close) {\r\n          console.log('I was closed by the close button');\r\n        }\r\n      });\r\n    },\r\n    createChart1() {\r\n      const ctx = document.getElementById('myChart1');\r\n\r\n      const score = 75; // 실제 점수를 여기에 설정하세요\r\n\r\n      const getPointColor = (score) => {\r\n        if (score > 70) return 'rgba(146, 183, 255)';\r\n        if (score >= 30) return 'rgba(39, 234, 182)';\r\n        return 'rgba(255, 206, 86)';\r\n      };\r\n\r\n      // 선형 보간 함수\r\n      const linearInterpolation = (x, x0, x1, y0, y1) => {\r\n        return y0 + ((x - x0) * (y1 - y0)) / (x1 - x0);\r\n      };\r\n\r\n      // 점수에 따른 x 위치 계산\r\n      const getXPosition = (score) => {\r\n        if (score <= 30) return linearInterpolation(score, 0, 30, 0, 1);\r\n        if (score <= 70) return linearInterpolation(score, 30, 70, 1, 2);\r\n        return linearInterpolation(score, 70, 100, 2, 3);\r\n      };\r\n\r\n      const xPosition = getXPosition(score);\r\n\r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: ['0%', '30%', '70%', '100%'],\r\n          datasets: [\r\n            {\r\n              data: [\r\n                { x: 0, y: 0 },\r\n                { x: 1, y: 30 },\r\n                { x: 2, y: 70 },\r\n                { x: 3, y: 100 },\r\n              ],\r\n              borderColor: (context) => {\r\n                const chart = context.chart;\r\n                const { ctx, chartArea } = chart;\r\n                if (!chartArea) {\r\n                  return null;\r\n                }\r\n                const gradient = ctx.createLinearGradient(\r\n                  chartArea.left,\r\n                  0,\r\n                  chartArea.right,\r\n                  0\r\n                );\r\n                gradient.addColorStop(0, 'rgba(255, 206, 86, 1)');\r\n                gradient.addColorStop(0.31, 'rgba(255, 206, 86, 1)');\r\n                gradient.addColorStop(0.35, 'rgba(39, 234, 182, 1)');\r\n                gradient.addColorStop(0.66, 'rgba(39, 234, 182, 1)');\r\n                gradient.addColorStop(0.69, 'rgba(146, 183, 255, 1)');\r\n                gradient.addColorStop(1, 'rgba(146, 183, 255, 1)');\r\n                return gradient;\r\n              },\r\n              borderWidth: 2,\r\n              fill: true,\r\n              backgroundColor: (context) => {\r\n                const chart = context.chart;\r\n                const { ctx, chartArea } = chart;\r\n                if (!chartArea) {\r\n                  return null;\r\n                }\r\n                const gradient = ctx.createLinearGradient(\r\n                  chartArea.left,\r\n                  0,\r\n                  chartArea.right,\r\n                  0\r\n                );\r\n                gradient.addColorStop(0, 'rgba(255, 206, 86, 0.5)');\r\n                gradient.addColorStop(0.31, 'rgba(255, 206, 86, 0.5)');\r\n                gradient.addColorStop(0.35, 'rgba(39, 234, 182, 0.5)');\r\n                gradient.addColorStop(0.66, 'rgba(39, 234, 182, 0.5)');\r\n                gradient.addColorStop(0.69, 'rgba(146, 183, 255, 0.5)');\r\n                gradient.addColorStop(1, 'rgba(146, 183, 255, 0.5)');\r\n                return gradient;\r\n              },\r\n              pointRadius: 0,\r\n              order: 2, // 라인 그래프를 뒤로 보냅니다\r\n            },\r\n            {\r\n              data: [{ x: xPosition, y: score }],\r\n              pointBackgroundColor: getPointColor(score),\r\n              pointBorderColor: getPointColor(score),\r\n              pointRadius: 6,\r\n              pointHoverRadius: 8,\r\n              type: 'scatter',\r\n              order: 1, // 스캐터 포인트를 앞으로 가져옵니다\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: 'linear',\r\n              min: 0,\r\n              max: 3,\r\n              ticks: {\r\n                stepSize: 1,\r\n                callback: function (value, index) {\r\n                  return ['0%', '30%', '70%', '100%'][index];\r\n                },\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100,\r\n              grid: {\r\n                display: true,\r\n              },\r\n              ticks: {\r\n                // display: false\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function (context) {\r\n                  if (context.datasetIndex === 1) {\r\n                    return 'Me: ' + context.parsed.y + '%';\r\n                  }\r\n                },\r\n              },\r\n            },\r\n          },\r\n          elements: {\r\n            point: {\r\n              radius: 0,\r\n            },\r\n            line: {\r\n              tension: 0.2,\r\n            },\r\n          },\r\n        },\r\n        plugins: [\r\n          {\r\n            afterDraw: (chart) => {\r\n              const ctx = chart.ctx;\r\n              const xAxis = chart.scales.x;\r\n              const yAxis = chart.scales.y;\r\n\r\n              const x = xAxis.getPixelForValue(xPosition);\r\n              const y = yAxis.getPixelForValue(score);\r\n\r\n              ctx.save();\r\n              ctx.fillStyle = getPointColor(score);\r\n              ctx.font = 'bold 14px Arial';\r\n              ctx.textAlign = 'center';\r\n\r\n              if (score < 79) {\r\n                // 화살표 그리기\r\n                ctx.strokeStyle = getPointColor(score);\r\n\r\n                // 막대기 부분\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, y);\r\n                ctx.lineTo(x, y - 40);\r\n                ctx.lineWidth = 2;\r\n                ctx.stroke();\r\n\r\n                // 삼각형 화살표 부분\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, y - 40);\r\n                ctx.lineTo(x - 6, y - 34);\r\n                ctx.lineTo(x + 6, y - 34);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n\r\n                // \"Me!\" 텍스트 그리기\r\n                ctx.fillText('Me!', x, y - 50);\r\n              } else {\r\n                // score가 79 이상일 때는 scatter 바로 위에 \"Me!\" 표시\r\n                ctx.fillText('Me!', x, y - 15);\r\n              }\r\n\r\n              ctx.restore();\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    },\r\n    createChart2() {\r\n      const ctx = document.getElementById('myChart2').getContext('2d');\r\n\r\n      const data = {\r\n        labels: [\r\n          'HRD',\r\n          'Monthly Best',\r\n          'Monthly Base',\r\n          'HotTip',\r\n          'BEST PG',\r\n          'BEST Branch',\r\n          '소비자 지원',\r\n          '리그 테이블',\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: '내 점수',\r\n            data: [45, 50, 45, 72, 30, 68, 90, 82],\r\n            backgroundColor: 'rgba(255, 0, 46, 0.3)',\r\n            borderColor: 'rgba(255, 0, 46, 0.5)',\r\n            pointBackgroundColor: 'rgb(255, 99, 132)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgb(255, 99, 132)',\r\n          },\r\n          {\r\n            label: '평균 점수',\r\n            data: [90, 65, 80, 75, 68, 72, 85, 78],\r\n            backgroundColor: 'rgba(0, 122, 255, 0.2)',\r\n            borderColor: 'rgba(0, 122, 255, 0.4)',\r\n            pointBackgroundColor: 'rgb(54, 162, 235)',\r\n            pointBorderColor: '#fff',\r\n            pointHoverBackgroundColor: '#fff',\r\n            pointHoverBorderColor: 'rgb(54, 162, 235)',\r\n          },\r\n        ],\r\n      };\r\n\r\n      const config = {\r\n        type: 'radar',\r\n        data: data,\r\n        options: {\r\n          elements: {\r\n            line: {\r\n              borderWidth: 3,\r\n            },\r\n          },\r\n          scales: {\r\n            r: {\r\n              angleLines: {\r\n                display: false,\r\n              },\r\n              suggestedMin: 0,\r\n              suggestedMax: 100,\r\n              ticks: {\r\n                stepSize: 20, // 간격을 20으로 설정 (5개의 간격: 20, 40, 60, 80, 100)\r\n                display: false, // 눈금 숫자를 표시하지 않음\r\n              },\r\n              pointLabels: {\r\n                font: {\r\n                  size: 12, // 레이블 폰트 크기 조정\r\n                },\r\n              },\r\n              grid: {\r\n                // circular: true,\r\n                color: 'rgba(0, 0, 0, 0.2)', // 그리드 선 색상 설정 (필요시)\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n      new Chart(ctx, config);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.createChart1();\r\n      this.createChart2();\r\n    });\r\n    this.aitest();\r\n  },\r\n  computed: {\r\n    ...mapGetters('login', ['getLoginInfo']),\r\n  },\r\n  watch: {},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.text-emphasis {\r\n  font-size: 13pt;\r\n  font-family: 'KB_S5';\r\n  font-weight: 600;\r\n  color: #4b4a4a;\r\n}\r\n\r\n.card {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.card-ml {\r\n  margin-left: 10px;\r\n  text-align: start;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1) !important;\r\n}\r\n\r\n.text-primary {\r\n  color: #32ab8b !important;\r\n  font-weight: 600;\r\n  font-family: 'KB_S5';\r\n}\r\n\r\n.text-secondary {\r\n  color: #4a90e2 !important;\r\n  font-weight: 600;\r\n  font-family: 'KB_S5';\r\n}\r\n\r\n.text-goal {\r\n  color: #ff7e5e !important;\r\n  font-weight: 600;\r\n  font-family: 'KB_S5';\r\n}\r\n\r\n.text-gray {\r\n  color: #3b3b3b !important;\r\n  font-weight: 600;\r\n  font-family: 'KB_S5';\r\n}\r\n\r\n.addInfo {\r\n  color: rgb(152, 152, 152);\r\n  font-size: 12pt;\r\n}\r\n\r\n.card-gray {\r\n  border-radius: 7px;\r\n  padding: 15px 10px 15px 10px;\r\n  text-align: start;\r\n}\r\n\r\nspan {\r\n  font-size: 14pt;\r\n  font-family: 'KB_S5';\r\n}\r\n\r\n.row {\r\n  margin: 17px 0px 17px 0px;\r\n}\r\n\r\n.highlight {\r\n  background-color: #fff6d4;\r\n  border-radius: 30px; /* 둥근 모서리 */\r\n  padding: 4px 8spx; /* 내부 여백을 추가하여 크기 조절 */\r\n  display: inline-block; /* 인라인 블록 요소로 설정하여 크기 조절 */\r\n}\r\n\r\n\r\n.page-back {\r\n\r\n\r\n  padding-left: 5%;\r\n  padding-right: 5%;\r\n\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.fade-in {\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n</style>\r\n","/*!\n* chartjs-plugin-annotation v3.0.1\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2023 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, defined, isFunction, callback, isObject, valueOrDefault, toRadians, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(state, event) {\n      return filterElements(state, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(state, event, options) {\n      return getNearestItem(state, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {Object} state - the state of the plugin\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(state, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(state, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(state, event, options) {\n  return state.visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(state, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(state, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, borderWidth) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  const hBorderWidth = borderWidth / 2;\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hBorderWidth, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, borderWidth) {\n  const hBorderWidth = borderWidth / 2;\n  const inRangeX = point.x >= x - hBorderWidth - EPSILON && point.x <= x2 + hBorderWidth + EPSILON;\n  const inRangeY = point.y >= y - hBorderWidth - EPSILON && point.y <= y2 + hBorderWidth + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\nconst boxAppering = (x, y) => ({x, y, x2: x, y2: y, width: 0, height: 0});\nconst defaultInitAnimation = {\n  box: (properties) => boxAppering(properties.centerX, properties.centerY),\n  ellipse: (properties) => ({centerX: properties.centerX, centerY: properties.centerX, radius: 0, width: 0, height: 0}),\n  label: (properties) => boxAppering(properties.centerX, properties.centerY),\n  line: (properties) => boxAppering(properties.x, properties.y),\n  point: (properties) => ({centerX: properties.centerX, centerY: properties.centerY, radius: 0, width: 0, height: 0}),\n  polygon: (properties) => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {{x: number|string, y: number|string}|string|number} value\n * @param {string|number} defaultValue\n * @returns {{x: number|string, y: number|string}}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\n\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{chart, properties, options}]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    return {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n  }\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n */\nfunction drawLabel(ctx, rect, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition$1(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n  state._getElements = getElements; // for testing\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureRect(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction measureRect(point, size, options, padding) {\n  const width = size.width + padding.width + options.borderWidth;\n  const height = size.height + padding.height + options.borderWidth;\n  const position = toPosition(options.position, 'center');\n  const x = calculatePosition(point.x, width, options.xAdjust, position.x);\n  const y = calculatePosition(point.y, height, options.yAdjust, position.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\nfunction calculatePosition(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hBorderWidth = this.options.borderWidth / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hBorderWidth);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return (limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, borderWidth);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hBorderWidth - EPSILON && rotatedPoint[axis] <= limit.end + hBorderWidth + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, borderWidth) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const hBorderWidth = borderWidth / 2 || 0;\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hBorderWidth, 2)) + (b / Math.pow(yRadius + hBorderWidth, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, borderWidth);\n    }\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth}, rad) {\n  const halfBorder = borderWidth / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + halfBorder),\n      bY: centerY - cos * (radius + halfBorder)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"3.0.1\";\n\nconst chartStates = new Map();\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations, chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n","import { render } from \"./AI_ReportView.vue?vue&type=template&id=7429df5e&scoped=true\"\nimport script from \"./AI_ReportView.vue?vue&type=script&lang=js\"\nexport * from \"./AI_ReportView.vue?vue&type=script&lang=js\"\n\nimport \"./AI_ReportView.vue?vue&type=style&index=0&id=7429df5e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7429df5e\"]])\n\nexport default __exports__","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["class","style","_createElementVNode","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","analysis","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","$data","all","_hoisted_12","interaction","modes","point","state","event","filterElements","intersect","nearest","options","getNearestItem","x","axis","y","getElements","mode","inRangeByAxis","element","inRange","getPointByAxis","center","visibleElements","filter","minDistance","Number","POSITIVE_INFINITY","reduce","nearestItems","getCenterPoint","evenPoint","distance","push","sort","a","b","_index","slice","isOlderPart","act","req","length","EPSILON","clamp","from","to","Math","min","max","clampAll","obj","key","Object","keys","inPointRange","radius","borderWidth","hBorderWidth","pow","inBoxRange","x2","y2","inRangeX","inRangeY","getElementCenterPoint","useFinalPosition","centerX","centerY","getProps","requireVersion","pkg","ver","strict","parts","split","i","parseInt","Error","isPercentString","s","endsWith","toPercent","parseFloat","toPositivePercent","boxAppering","width","height","defaultInitAnimation","box","properties","ellipse","label","line","polygon","getRelativePosition","size","position","getSize","value","positivePercent","calculateTextAlignment","textAlign","toPosition","defaultValue","v","isBoundToPoint","xValue","yValue","initAnimationProperties","chart","initAnim","init","applyDefault","execCallback","loadHooks","hooks","hooksContainer","activated","forEach","hook","type","result","widthCache","Map","notRadius","isNaN","fontsKey","fonts","prev","item","string","isImageOrCanvas","content","toString","translate","ctx","rotation","rotate","t","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","optFont","font","map","f","strokeWidth","textStrokeWidth","lines","mapKey","join","_measureText","has","set","calculateLabelSize","get","drawBox","rect","save","stroke","fillStyle","backgroundColor","beginPath","w","h","borderRadius","closePath","fill","borderShadowColor","restore","drawLabel","globalAlpha","getOpacity","opacity","drawImage","labels","optColor","color","colors","textBaseline","setTextStrokeStyle","applyLabelDecoration","applyLabelContent","miterLimit","textStrokeColor","drawPoint","pointStyle","rad","drawPointStyle","xOffset","yOffset","cornerRadius","arc","T","moveTo","sin","cos","lineTo","P","H","SQRT1_2","count","text","measureText","lineHeight","lhs","l","lh","strokeText","c","fillText","elementValue","limitedLineScale","xScaleID","start","end","startProp","endProp","yScaleID","scaleValue","scale","fallback","parse","getPixelForValue","retrieveScaleID","scales","scaleID","charAt","axes","values","id","getDimensionByScale","reverse","getChartPoint","chartArea","xScale","yScale","left","top","resolveBoxProperties","right","bottom","xDim","getChartDimensionByScale","xMin","xMax","yDim","yMin","yMax","resolvePointProperties","adjustCenterX","xAdjust","adjustCenterY","yAdjust","getChartCircle","resolveLineProperties","area","resolveFullLineProperties","resolveLimitedLineProperties","resolveBoxAndLabelProperties","initProperties","elements","optionScope","resolveLabelElementProperties$1","NaN","endValue","isHorizontal","scaleId","dim","calculateX","labelSize","padding","calculatePosition$1","adjust","calculateY","boxOpts","labelOpts","padStart","padEnd","availableSize","callout","display","rotated","angle","cx","cy","moveHooks","eventHooks","concat","updateListeners","listened","listeners","moveListened","_getElements","annotations","scope","click","handleEvent","handleMoveEvents","handleClickEvents","previous","hovered","context","changed","dispatchMoveEvents","checkElements","indexOf","dispatchEvent","handler","$context","elementHooks","updateHooks","hooked","invokeHook","callbackHook","adjustScaleRange","range","getScaleLimits","changeScaleLimit","handleTickRangeOptions","verifyScaleOptions","annotation","verifyScaleIDs","limit","suggestedLimit","scaleLimitDefined","scaleOptions","verifyProperties","console","warn","prop","scaleIDOption","limits","NEGATIVE_INFINITY","updateLimits","props","raw","BoxAnnotation","mouseX","mouseY","this","draw","resolveElementProperties","defaults","undefined","drawTime","family","weight","z","defaultRoutes","descriptors","_fallback","positions","LabelAnnotation","visible","_visible","drawCallout","getLabelSize","boxSize","measureRect","pointX","pointY","calculatePosition","calloutPosition","resolveCalloutPosition","isPointInRange","separatorStart","separatorEnd","getCalloutSeparatorCoord","sideStart","sideEnd","getCalloutSideCoord","margin","rotatedPoint","getCalloutSeparatorAdjust","side","getCalloutSideAdjust","includes","resolveCalloutAutoPosition","xPoints","yPoints","index","pointInLine","p1","p2","interpolateX","abs","interpolateY","sqr","rangeLimit","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","atan2","LineAnnotation","path","mx","currentDevicePixelRatio","my","isPointInStroke","isOnLabel","epsilon","intersects","inAxisRange","sqrt","curve","drawCurve","startOpts","endOpts","startAdjust","endAdjust","getArrowHeads","drawArrowHead","inside","isLineInArea","limitLineToArea","getControlPoint","labelProperties","resolveLabelElementProperties","arrowHeadsDefaults","limitPointToArea","x1","y1","dx","dy","lenSq","xx","yy","textSize","calculateLabelPosition","calculateAutoRotation","sizes","rotatedSize","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","space","spaceAround","calculateTAdjust","lineSize","lineW","lineH","r","coordinate","labelSizes","halfSize","arrowStartOpts","arrowHeads","arrowEndOpts","getLineAdjust","arrowOpts","offset","arrowOffsetX","controlPoint","drawArrowHeadOnCurve","startAngle","endAngle","ps","pe","Path2D","quadraticCurveTo","assign","EllipseAnnotation","pointInEllipse","p","xRadius","yRadius","cosAngle","sinAngle","PointAnnotation","PolygonAnnotation","pointIsInPolygon","axisPoints","bY","bX","first","el","sides","elProps","buildPointElement","halfBorder","points","isInside","A","B","annotationTypes","d","describe","directUpdater","update","hooks$1","resolve","optDefs","resolveObj","isIndexable","resolveType","updateElements","animations","resolveAnimations","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","skip","toSkip","updateSubElements","resolveAnnotationOptions","animOpts","mainElement","subElements","definition","subElement","subResolver","override","elementClass","defs","create","add","splice","Array","version","chartStates","beforeRegister","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","afterDataLimits","afterUpdate","beforeDatasetsDraw","_args","clip","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","afterDestroy","delete","_getState","numbers","common","_indexable","_scriptable","_allKeys","opts","additionalOptionScopes","caller","drawableElements","getDrawableElements","drawElement","main","sub","Chart","annotationPlugin","name","data","methods","aitest","response","api","post","params","prompt","log","error","analysisAlret","$swal","timer","timerProgressBar","imageUrl","require","imageClass","scrollbarPadding","title","html","getLoginInfo","user_name","showCloseButton","didOpen","popup","getPopup","image","getImage","querySelector","img","marginTop","paddingTop","showLoading","then","dismiss","DismissReason","close","createChart1","document","getElementById","score","getPointColor","linearInterpolation","x0","y0","getXPosition","xPosition","datasets","gradient","createLinearGradient","addColorStop","pointRadius","order","pointBackgroundColor","pointBorderColor","pointHoverRadius","responsive","maintainAspectRatio","ticks","stepSize","callback","beginAtZero","grid","plugins","legend","tooltip","callbacks","datasetIndex","parsed","tension","xAxis","yAxis","createChart2","pointHoverBackgroundColor","pointHoverBorderColor","config","angleLines","suggestedMin","suggestedMax","pointLabels","mounted","$nextTick","computed","mapGetters","watch","__exports__","render"],"sourceRoot":""}