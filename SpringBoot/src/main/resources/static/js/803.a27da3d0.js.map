{"version":3,"file":"js/803.a27da3d0.js","mappings":"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","sources":["webpack://mile/./src/views/m_Tip/M_TipDetailView.vue","webpack://mile/./src/components/m-tip/UserComment.vue","webpack://mile/./src/components/m-tip/UserComment.vue?1559","webpack://mile/./src/views/m_Tip/M_TipDetailView.vue?2d4b"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div v-if=\"notice\" class=\"content cards\">\r\n      <div class=\"header\">\r\n        <div class=\"back-container\">\r\n          <button class=\"back-button\" @click=\"goBack\">\r\n            <span class=\"arrow\">❮</span> 이전\r\n          </button>\r\n        </div>\r\n        <div class=\"actions\">\r\n          <!-- 로그인한 사용자가 글 작성자인 경우 -->\r\n          <div\r\n            v-if=\"\r\n              isLoggedIn && notice.user_no === loginInfo.user_no && !isChecked\r\n            \"\r\n          >\r\n            <button class=\"edit-button mr-3\" @click=\"goToModifyView\">\r\n              수정\r\n            </button>\r\n            <button class=\"delete-button mr-3\" @click=\"deleteNotice\">\r\n              삭제\r\n            </button>\r\n          </div>\r\n          <div\r\n            v-if=\"\r\n              isLoggedIn &&\r\n              loginInfo.user_is_admin &&\r\n              !loginInfo.user_is_manager &&\r\n              isChecked\r\n            \"\r\n          >\r\n            <button class=\"revoke-button\" @click=\"mtip_complainBack\">\r\n              신고취하\r\n            </button>\r\n            &nbsp;&nbsp;\r\n            <button class=\"delete-button\" @click=\"deleteNoticeAdmin\">\r\n              삭제\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <span v-if=\"isNew(notice?.mtip_board_date)\" class=\"new-label\">NEW</span>\r\n        <h1 class=\"title\">{{ notice?.mtip_board_title }}</h1>\r\n        <div class=\"meta\">\r\n          <span class=\"author\">{{ notice?.user_name }}</span>\r\n          <span class=\"date\">{{ formatDate(notice?.mtip_board_date) }}</span>\r\n        </div>\r\n        <div class=\"main-content\">\r\n          <div class=\"body\">\r\n            <pre><p>{{ notice?.mtip_board_content }}</p></pre>\r\n            <!-- 줄 바꿈 -->\r\n          </div>\r\n          <div class=\"file cards\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <h2 style=\"margin-right: 10px\">첨부파일</h2>\r\n              <span\r\n                v-if=\"!notice.mtip_board_file\"\r\n                style=\"\r\n                  color: #4b4a4a;\r\n                  font-family: 'KB_C2', sans-serif;\r\n                  margin-left: 2%;\r\n                  white-space: nowrap;\r\n                \"\r\n                >파일이 존재하지 않습니다.</span\r\n              >\r\n            </div>\r\n            <div v-if=\"notice.mtip_board_file\" style=\"margin-top: 10px\">\r\n              <a\r\n                @click.prevent=\"downloadFile\"\r\n                href=\"#\"\r\n                class=\"file-download-link\"\r\n              >\r\n                {{ getDisplayFileName(notice?.mtip_board_file) }}\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"stats-container\">\r\n          <div class=\"icon-container\">\r\n            <div class=\"views-icon\">\r\n              <i class=\"bi bi-eye\"></i>\r\n            </div>\r\n            <div class=\"views-text\">{{ notice?.mtip_board_hit }}</div>\r\n          </div>\r\n          <div class=\"icon-container\" @click=\"toggleLike\">\r\n            <div class=\"heart-icon\">\r\n              <i\r\n                :class=\"['bi', isLiked ? 'bi-heart-fill' : 'bi-heart']\"\r\n                :style=\"{ color: isLiked ? '#dc3545' : 'inherit' }\"\r\n              ></i>\r\n            </div>\r\n            <div class=\"views-text\">{{ notice?.mtip_board_like }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"content-container mx-auto\">\r\n        <div class=\"actions\">\r\n          <div v-if=\"isLoggedIn && loginInfo.user_is_admin && isChecked\"></div>\r\n          <div v-else>\r\n            <span class=\"alert-icon\">🚨</span>\r\n            <button class=\"report-button\" @click=\"mtip_complain\">\r\n              신고하기\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <hr class=\"divider\" />\r\n\r\n        <UserComment\r\n          v-if=\"isNoticeLoaded\"\r\n          :login-info=\"loginInfo\"\r\n          :mtip_board_no=\"notice.mtip_board_no\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p v-if=\"isLoading\">Loading...</p>\r\n      <p v-else>No data available</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api/axios';\r\nimport { mapActions, mapGetters, mapState, mapMutations } from 'vuex';\r\nimport Swal from 'sweetalert2';\r\nimport UserComment from '@/components/m-tip/UserComment';\r\nimport mtipReply from '@/store/mtip/mtipReply';\r\n\r\nexport default {\r\n  name: 'M_TipDetailView',\r\n  props: ['mtip_board_no'],\r\n  modules: {\r\n    mtipReply,\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      isNoticeLoaded: false,\r\n      comments: [], // comments를 초기화\r\n      localIsLiked: false,\r\n    };\r\n  },\r\n  watch: {\r\n    '$route.params.mtip_board_no': {\r\n      immediate: true,\r\n      handler(newId, oldId) {\r\n        if (newId && newId !== oldId) {\r\n          this.fetchNoticeDetail(newId);\r\n          this.$store.commit('mtipReply/CLEAR_COMMENTS');\r\n          this.$store.dispatch('mtipReply/fetchComments', newId);\r\n        }\r\n      },\r\n    },\r\n  },\r\n  components: {\r\n    UserComment,\r\n  },\r\n  methods: {\r\n    ...mapActions('mtipBoard', [\r\n      'fetchNoticeDetail',\r\n      'likePost',\r\n      'unlikePost',\r\n      'checkLikeStatus',\r\n    ]),\r\n    ...mapMutations('mtipBoard', ['SET_LIKE_STATUS']),\r\n\r\n    async toggleLike() {\r\n      console.log('여기까지오긴옴');\r\n      if (!this.loginInfo) {\r\n        alert('로그인이 필요합니다.');\r\n        return;\r\n      }\r\n      console.log('로그인확인완룡');\r\n      if (!this.notice) {\r\n        console.error('Notice data is not available');\r\n        return;\r\n      }\r\n      console.log('노티스확인완룡!');\r\n      try {\r\n        const action = this.isLiked ? 'unlikePost' : 'likePost';\r\n        console.log('이제 엑시오스 갈거임.');\r\n        const result = await this.$store.dispatch(`mtipBoard/${action}`, {\r\n          mtip_board_no: this.notice.mtip_board_no,\r\n          user_no: this.loginInfo.user_no,\r\n        });\r\n\r\n        console.log('서버에서 받은 좋아요 상태:', result);\r\n\r\n        await this.updateLikeStatus(this.notice.mtip_board_no);\r\n\r\n        // 서버에서 받아온 좋아요 수를 직접 설정\r\n        if (result !== -1) {\r\n          this.notice.mtip_board_like = result.isLiked; // 서버에서 받은 좋아요 수를 그대로 반영\r\n        }\r\n      } catch (error) {\r\n        console.error('Error toggling like:', error);\r\n      }\r\n    },\r\n    async deleteNotice() {\r\n      Swal.fire({\r\n        title: '경고',\r\n        text: '정말로 삭제하시겠습니까?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#4b4a4a',\r\n        cancelButtonColor: '#bd2c3a',\r\n        confirmButtonText: '확인',\r\n        cancelButtonText: '취소',\r\n        reverseButtons: false,\r\n        allowOutsideClick: false,\r\n        scrollbarPadding: false,\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          try {\r\n            await api.delete(`/mtip/delete/${this.notice.mtip_board_no}`);\r\n            Swal.fire({\r\n              title: '게시글 삭제 완료',\r\n              text: '게시글이 삭제 되었습니다.',\r\n              icon: 'success',\r\n              allowOutsideClick: false,\r\n              scrollbarPadding: false,\r\n            }).then(() => {\r\n              this.$router.push('/M_TipListView');\r\n            });\r\n          } catch (error) {\r\n            console.error('게시글 삭제 중 오류가 발생했습니다.', error);\r\n            Swal.fire({\r\n              title: '게시글 삭제 중 오류가 발생했습니다.',\r\n              icon: 'error',\r\n              allowOutsideClick: false,\r\n              scrollbarPadding: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    async deleteNoticeAdmin() {\r\n      Swal.fire({\r\n        title: '경고',\r\n        text: '정말로 삭제하시겠습니까?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#4b4a4a',\r\n        cancelButtonColor: '#bd2c3a',\r\n        confirmButtonText: '확인',\r\n        cancelButtonText: '취소',\r\n        reverseButtons: false,\r\n        allowOutsideClick: false,\r\n        scrollbarPadding: false,\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          try {\r\n            await api.delete(`/mtip/delete/${this.notice.mtip_board_no}`);\r\n            Swal.fire({\r\n              title: '게시글 삭제 완료',\r\n              text: '게시글이 삭제 되었습니다.',\r\n              icon: 'success',\r\n              allowOutsideClick: false,\r\n              scrollbarPadding: false,\r\n            }).then(() => {\r\n              this.$router.push('/mTipMainAdminView');\r\n            });\r\n          } catch (error) {\r\n            console.error('게시글 삭제 중 오류가 발생했습니다.', error);\r\n            Swal.fire({\r\n              title: '게시글 삭제 중 오류가 발생했습니다.',\r\n              icon: 'error',\r\n              allowOutsideClick: false,\r\n              scrollbarPadding: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    mtip_complain() {\r\n      if (\r\n        this.notice.mtip_complain === 1 ||\r\n        this.notice.mtip_complain === true\r\n      ) {\r\n        Swal.fire({\r\n          title: '경고',\r\n          text: '이미 신고된 게시글 입니다.',\r\n          icon: 'error',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#4b4a4a',\r\n          cancelButtonColor: '#bd2c3a',\r\n          confirmButtonText: '확인',\r\n          cancelButtonText: '취소',\r\n          reverseButtons: false,\r\n        });\r\n        return;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: '신고',\r\n        text: '정말로 이 게시글을 신고하시겠습니까?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#4b4a4a',\r\n        cancelButtonColor: '#bd2c3a',\r\n        confirmButtonText: '확인',\r\n        cancelButtonText: '취소',\r\n        reverseButtons: false,\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          try {\r\n            await api.post(`/mtip/complain/${this.notice.mtip_board_no}`);\r\n            Swal.fire(\r\n              '신고완료',\r\n              '정상적으로 게시글 신고가 완료되었습니다.',\r\n              'success'\r\n            ).then(() => {\r\n              this.$router.push('/M_TipListView');\r\n            });\r\n          } catch (error) {\r\n            console.error('신고하기 중 오류가 발생했습니다.', error);\r\n            Swal.fire('신고하기 중 오류가 발생했습니다.', '', 'error');\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    mtip_complainBack() {\r\n      Swal.fire({\r\n        title: '신고취하',\r\n        text: '정말로 이 게시글을 신고취하 하시겠습니까?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#4b4a4a',\r\n        cancelButtonColor: '#bd2c3a',\r\n        confirmButtonText: '확인',\r\n        cancelButtonText: '취소',\r\n        reverseButtons: false,\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          try {\r\n            await api.post(`/mtip/complainBack/${this.notice.mtip_board_no}`);\r\n            Swal.fire(\r\n              '성공',\r\n              '정상적으로 게시글 신고취하가 완료되었습니다.',\r\n              'success'\r\n            ).then(() => {\r\n              this.$router.push('/mTipMainAdminView'); //여기 변경해야댐\r\n            });\r\n          } catch (error) {\r\n            console.error('신고취하 중 오류가 발생했습니다.', error);\r\n            Swal.fire('신고취하 중 오류가 발생했습니다.', '', 'error');\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    showAlert(message, icon) {\r\n      this.$swal({\r\n        title: message,\r\n        icon: icon,\r\n        confirmButtonText: '확인',\r\n        confirmButtonColor: '#4b4a4a',\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        allowEnterKey: false,\r\n        stopKeydownPropagation: false,\r\n        scrollbarPadding: false,\r\n        backdrop: true,\r\n        didOpen: () => {\r\n          document.body.classList.add('no-scroll');\r\n          document.documentElement.style.overflow = 'hidden';\r\n        },\r\n        willClose: () => {\r\n          document.body.classList.remove('no-scroll');\r\n          document.documentElement.style.overflow = '';\r\n        },\r\n      });\r\n    },\r\n\r\n    getDisplayFileName(fileName) {\r\n      const UUID_LENGTH = 36 + 1;\r\n\r\n      if (!fileName || fileName.length <= UUID_LENGTH) {\r\n        return fileName;\r\n      }\r\n\r\n      if (fileName.charAt(UUID_LENGTH - 1) === '_') {\r\n        return fileName.substring(UUID_LENGTH);\r\n      }\r\n\r\n      return fileName;\r\n    },\r\n\r\n    goBack() {\r\n      this.$router.go(-1);\r\n    },\r\n    goToModifyView() {\r\n      console.log('modify 화면으로 넘긴 정보:', this.notice.mtip_board_no);\r\n      this.$router.push({\r\n        name: 'm_TipModifyView',\r\n        params: { mtip_board_no: this.notice.mtip_board_no },\r\n      });\r\n    },\r\n    isNew(dateString) {\r\n      const today = new Date();\r\n      const noticeDate = new Date(dateString);\r\n      const diffTime = Math.abs(today - noticeDate);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      return diffDays <= 7;\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'Date not available';\r\n\r\n      const date = new Date(dateString);\r\n\r\n      if (isNaN(date.getTime())) {\r\n        console.error('Invalid date string:', dateString);\r\n        return ' ↺ 댓글 등록 중';\r\n      }\r\n\r\n      const options = {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n      };\r\n\r\n      return date.toLocaleString('ko-KR', options);\r\n    },\r\n\r\n    async downloadFile() {\r\n      try {\r\n        const fileName = encodeURIComponent(this.notice.mtip_board_file);\r\n        const response = await api({\r\n          url: `/mtip/downloadGuide/${fileName}`,\r\n          method: 'GET',\r\n          responseType: 'blob',\r\n        });\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', this.notice.mtip_board_file);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } catch (error) {\r\n        console.error('파일 다운로드 중 오류 발생:', error);\r\n        this.showAlert('파일 다운로드 중 오류가 발생했습니다.', 'error');\r\n      }\r\n    },\r\n    async fetchNoticeDetail(id) {\r\n      this.isLoading = true;\r\n      this.isNoticeLoaded = false;\r\n      try {\r\n        await this.$store.dispatch('mtipBoard/fetchNoticeDetail', id);\r\n        await this.updateLikeStatus(id);\r\n        this.isLoading = false;\r\n        this.isNoticeLoaded = true;\r\n      } catch (error) {\r\n        console.error('Error fetching notice detail:', error);\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async updateLikeStatus(noticeId) {\r\n      if (this.loginInfo && this.loginInfo.user_no) {\r\n        const likeStatus = await this.checkLikeStatus({\r\n          mtip_board_no: noticeId,\r\n          user_no: this.loginInfo.user_no\r\n        });\r\n        this.localIsLiked = likeStatus;\r\n        this.SET_LIKE_STATUS({\r\n          user_no: this.loginInfo.user_no,\r\n          mtip_board_no: noticeId,\r\n          isLiked: likeStatus\r\n        });\r\n        localStorage.setItem(`likeStatus_${noticeId}`, JSON.stringify(likeStatus));\r\n        console.log('Updated like status:', likeStatus);\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters('login', ['getLoginInfo', 'getIsChecked']),\r\n    ...mapGetters('mtipBoard', ['getNotice']),\r\n    ...mapState('login', ['loginInfo']),\r\n    ...mapState('mtipBoard', ['likedPosts']),\r\n\r\n    notice() {\r\n      return this.getNotice || null;\r\n    },\r\n    loginInfo() {\r\n      return this.getLoginInfo;\r\n    },\r\n    isChecked() {\r\n      return this.getIsChecked;\r\n    },\r\n    isLoggedIn() {\r\n      return !!this.loginInfo;\r\n    },\r\n    mileNo() {\r\n      return this.$route.params.notice.mtip_board_no;\r\n    },\r\n    isLiked() {\r\n      return this.localIsLiked;\r\n    },\r\n  },\r\n  async mounted() {\r\n    const noticeId = this.$route.params.mtip_board_no;\r\n    if (noticeId) {\r\n      await this.fetchNoticeDetail(noticeId);\r\n      this.$store.commit('mtipReply/CLEAR_COMMENTS');\r\n      await this.$store.dispatch('mtipReply/fetchComments', noticeId);\r\n\r\n      // 로컬 스토리지에서 좋아요 상태 확인\r\n      const storedLikeStatus = localStorage.getItem(`likeStatus_${noticeId}`);\r\n      if (storedLikeStatus !== null) {\r\n        this.localIsLiked = JSON.parse(storedLikeStatus);\r\n        console.log('Loaded like status from localStorage:', this.localIsLiked);\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.body pre {\r\n  white-space: pre-wrap; /* 줄바꿈과 공백을 유지하여 표시 */\r\n  word-wrap: break-word; /* 길이가 길 경우 줄바꿈 */\r\n}\r\n.app-container {\r\n  width: 100%;\r\n  padding: 0px;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 4%;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 30px;\r\n  flex: 1;\r\n}\r\n\r\n.edit-button {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  color: #714319;\r\n  padding: 5px 0px;\r\n}\r\n\r\n.delete-button {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  color: #714319;\r\n}\r\n/* 신고취하 버튼*/\r\n.revoke-button {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  color: #714319;\r\n}\r\n\r\n.content {\r\n  padding: 30px;\r\n  width: 95%;\r\n  max-width: 1300px;\r\n  box-sizing: border-box;\r\n  min-height: 90vh;\r\n}\r\n\r\n.content.cards {\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  padding: 60px;\r\n  border-radius: 8px;\r\n  box-sizing: border-box;\r\n  min-height: 100vh;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 35px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  font-weight: bold;\r\n}\r\n\r\n.meta {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #888;\r\n  margin-bottom: 95px;\r\n  font-family: 'KB_C2', sans-serif;\r\n}\r\n\r\n.meta .author {\r\n  margin-right: 5px;\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15vh;\r\n}\r\n\r\n.body p {\r\n  font-size: 19px;\r\n  line-height: 1.5;\r\n  margin-bottom: 20px;\r\n  text-align: left !important;\r\n  padding-left: 2.5vw !important;\r\n  padding-right: 3vw !important;\r\n}\r\n\r\n.body p {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.file.cards {\r\n  background-color: hsl(0, 0%, 95%);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-48%);\r\n  width: 102%;\r\n}\r\n\r\n.file h2 {\r\n  text-align: left;\r\n  font-size: 21px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  color: #4b4a4a;\r\n}\r\n\r\n.file a {\r\n  text-align: left;\r\n  font-size: 19px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  margin-left: 3%;\r\n  display: block; /* 변경된 부분 */\r\n}\r\n\r\n.stats-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.icon-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 3vh;\r\n}\r\n\r\n.views-icon {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n}\r\n\r\n.views-icon i {\r\n  /*font-size: 1.4vw;*/\r\n  font-size: 14pt;\r\n  color: #4b4a4a;\r\n}\r\n\r\n.heart-icon {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 84px;\r\n  margin-left: 30px;\r\n}\r\n\r\n.heart-icon i {\r\n  /*font-size: 1.3vw;*/\r\n  font-size: 14pt;\r\n  color: #dc3545;\r\n  cursor: pointer;\r\n}\r\n.views-text {\r\n  flex: 0 0 auto;\r\n  text-align: left;\r\n  /*font-size: 1.2vw;*/\r\n  font-size: 14pt;\r\n  font-family: 'KB_C2', sans-serif;\r\n  color: #4b4a4a;\r\n  margin-left: 0.8vw;\r\n  margin-top: 80px;\r\n}\r\n\r\n.new-label {\r\n  color: #ffca05;\r\n  /* margin-left: 5px; */\r\n  text-align: center;\r\n  font-size: 18px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  margin-left: 0%;\r\n  display: inline-block;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.content-container {\r\n  width: 95%;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end; /* 왼쪽 정렬 */\r\n  margin-left: 10px; /* 전체를 오른쪽으로 살짝 이동 */\r\n}\r\n\r\n.report-button {\r\n  font-size: 18px;\r\n  font-family: 'KB_C2', sans-serif;\r\n  color: #4b4a4a;\r\n  margin-right: 5px; /* 버튼과 아이콘 사이의 간격 조정 */\r\n}\r\n\r\n.alert-icon {\r\n  font-size: 20pt;\r\n  margin-left: 5px; /* 아이콘을 버튼과의 간격 조정 */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.divider {\r\n  margin-bottom: 20px;\r\n}\r\n@media (max-width: 768px) {\r\n  .views-icon i {\r\n    font-size: 14pt;\r\n  }\r\n  .views-text {\r\n    font-size: 14pt;\r\n  }\r\n  .bi-heart::before {\r\n    font-size: 14pt;\r\n  }\r\n  .bi-heart-fill::before {\r\n    font-size: 14pt;\r\n  }\r\n  .edit-button {\r\n    font-size: 15px;\r\n  }\r\n  .delete-button {\r\n    font-size: 15px;\r\n  }\r\n}\r\n</style>\r\n","<!-- UserComment.vue -->\r\n<template>\r\n  <div class=\"comments-section\">\r\n    <div class=\"comments-header\">\r\n      <i\r\n        class=\"bi bi-chat-right-text\"\r\n        style=\"font-size: 20px; margin-right: 10px\"\r\n      ></i>\r\n      <h3\r\n        style=\"\r\n          font-size: 17px;\r\n          font-family: 'KB_C2', sans-serif;\r\n          text-align: left;\r\n          margin: 0;\r\n        \"\r\n      >\r\n        댓글 ({{ comments.length }})\r\n      </h3>\r\n    </div>\r\n    <div class=\"comment-input\" style=\"width: 100%\">\r\n      <textarea\r\n        class=\"input-base\"\r\n        placeholder=\"댓글을 입력해주세요\"\r\n        v-model=\"newComment\"\r\n        @keydown.enter.prevent=\"addComment\"\r\n        style=\"\r\n          font-family: 'KB_C2', sans-serif;\r\n          font-size: 18px;\r\n          width: 100%;\r\n          height: 80px;\r\n          resize: none;\r\n          padding: 10px;\r\n          text-align: left;\r\n        \"\r\n      ></textarea>\r\n      <button\r\n        class=\"btn-yellow btn-yellow:hover\"\r\n        @click=\"addComment\"\r\n        @keydown.enter.prevent=\"addComment\"\r\n        style=\"\r\n          font-family: 'KB_C2', sans-serif;\r\n          font-size: 18px;\r\n          width: 100px;\r\n          height: 80px;\r\n          color: #4b4a4a;\r\n        \"\r\n      >\r\n        등록\r\n      </button>\r\n    </div>\r\n\r\n    <div v-if=\"comments && comments.length\">\r\n      <div\r\n        class=\"comment\"\r\n        v-for=\"comment in comments\"\r\n        :key=\"comment.mtip_reply_no\"\r\n      >\r\n        <img\r\n          v-if=\"comment && comment.user_no\"\r\n          :src=\"profileImageUrl(comment.user_no)\"\r\n          class=\"profile-small my-3\"\r\n          alt=\"Profile Picture\"\r\n          @error=\"setDefaultImage\"\r\n        />\r\n        <div class=\"comment-content\">\r\n          <div class=\"comment-meta\">\r\n            <span\r\n              class=\"comment-user\"\r\n              style=\"\r\n                font-family: 'KB_C2', sans-serif;\r\n                font-size: 18px;\r\n                margin-right: 15px;\r\n              \"\r\n              >{{ comment.user_name }}</span\r\n            >\r\n            <span\r\n              class=\"comment-date\"\r\n              style=\"font-family: 'KB_C2', sans-serif; font-size: 14px\"\r\n              >{{ formatDate(comment.mtip_reply_date) }}</span\r\n            >\r\n            <div class=\"comment-actions\" style=\"margin-left: 50px\">\r\n              <div v-if=\"comment.user_no === loginInfo.user_no\">\r\n                <button\r\n                  v-if=\"!comment.isEditing\"\r\n                  class=\"edit-button\"\r\n                  @click=\"startEditing(comment)\"\r\n                  style=\"color: #714319\"\r\n                >\r\n                  수정\r\n                </button>\r\n                <button\r\n                  v-if=\"comment.isEditing\"\r\n                  class=\"edit-button\"\r\n                  @click=\"finishEditing(comment)\"\r\n                  style=\"color: #714319\"\r\n                >\r\n                  수정완료\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  class=\"delete-button\"\r\n                  @click=\"deleteComment(comment.mtip_reply_no)\"\r\n                  style=\"color: red\"\r\n                >\r\n                  삭제\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"comment.isEditing\">\r\n            <textarea\r\n              v-model=\"comment.editingContent\"\r\n              class=\"input-base\"\r\n              style=\"\r\n                font-family: 'KB_C2', sans-serif;\r\n                min-height: 30px;\r\n                height: auto;\r\n                font-size: 18px;\r\n                width: 100%;\r\n                resize: none;\r\n                overflow-y: hidden;\r\n                line-height: 2;\r\n                text-align: left;\r\n                box-sizing: border-box;\r\n              \"\r\n            ></textarea>\r\n          </div>\r\n          <div\r\n            v-else\r\n            class=\"comment-text\"\r\n            style=\"\r\n              font-family: 'KB_C2', sans-serif;\r\n              font-size: 18px;\r\n              margin-right: 1%;\r\n              text-align: left;\r\n            \"\r\n          >\r\n            {{ comment.mtip_reply_content || comment.editingContent }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-else\r\n      style=\"\r\n        font-family: 'KB_C2', sans-serif;\r\n        font-size: 15px;\r\n        margin-top: 100px;\r\n      \"\r\n    >\r\n      해당 게시글의 댓글이 없습니다.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import api from '@/api/axios';\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'UserComment',\r\n  props: {\r\n    loginInfo: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    mtip_board_no: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // comments: [], // 수정된 부분\r\n      newComment: '',\r\n      // editingCommentId: null, // 추가된 부분\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.fetchComments(this.mtip_board_no);\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters('mtipReply', ['getComments']),\r\n    comments() {\r\n      return this.getComments;\r\n    },\r\n  },\r\n  watch: {\r\n    comments: {\r\n      deep: true,\r\n      \r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions('mtipReply', [\r\n      'fetchComments',\r\n      'addComment',\r\n      'updateComment',\r\n      'deleteComment',\r\n    ]),\r\n\r\n    //프로필 사진 불러오기\r\n    profileImageUrl(user_no) {\r\n      if (user_no != null) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          return `${process.env.VUE_APP_API_URL}/profile/${user_no}.jpg`;\r\n        } else {\r\n          return `/profile/${user_no}.jpg`;\r\n        }\r\n      }\r\n      return ''; // 또는 기본 이미지 URL\r\n    },\r\n\r\n    getInitials(name) {\r\n      return name ? name.charAt(0).toUpperCase() : '?';\r\n    },\r\n\r\n    startEditing(comment) {\r\n      comment.isEditing = true;\r\n      comment.editingContent = comment.mtip_reply_content;\r\n    },\r\n\r\n    async fetchComments(mtip_board_no) {\r\n      await this.$store.dispatch('mtipReply/fetchComments', mtip_board_no);\r\n    },\r\n\r\n    async addComment() {\r\n      if (!this.newComment.trim()) return;\r\n      const commentData = {\r\n        user_no: this.loginInfo.user_no,\r\n        user_name: this.loginInfo.user_name,\r\n        mtip_board_no: this.mtip_board_no,\r\n        mtip_reply_content: this.newComment.trim(),\r\n      };\r\n      try {\r\n        await this.$store.dispatch(\r\n          'mtipReply/addComment',\r\n          commentData\r\n        );\r\n        this.newComment = '';\r\n        // window.location.reload()\r\n\r\n        // fetchComments 호출하여 댓글 목록을 다시 불러옵니다.\r\n        await this.fetchComments(this.mtip_board_no);\r\n      } catch (error) {\r\n        console.error('댓글 등록 중 오류가 발생했습니다:', error); // 에러 발생 시 로그\r\n      }\r\n    },\r\n\r\n    // 기본 프로필 사진\r\n    setDefaultImage(event) {\r\n      event.target.src = require('@/assets/img/test.png');\r\n    },\r\n    //날짜 변형\r\n    formatDate(dateString) {\r\n      const options = {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n      };\r\n      return new Date(dateString).toLocaleString('ko-KR', options);\r\n    },\r\n    goToModifyView(comment) {\r\n      // 수정 기능 구현, 필요에 따라 매개변수 전달\r\n      this.newComment = comment.mtip_reply_content;\r\n      this.editingCommentId = comment.mtip_reply_no;\r\n    },\r\n    async finishEditing(comment) {\r\n      if (!comment.editingContent.trim()) return;\r\n\r\n      const commentData = {\r\n        mtip_reply_no: comment.mtip_reply_no,\r\n        mtip_reply_content: comment.editingContent.trim(),\r\n      };\r\n\r\n      try {\r\n        const updatedComment = await this.$store.dispatch(\r\n          'mtipReply/updateComment',\r\n          commentData\r\n        );\r\n\r\n        // 서버에서 반환된 데이터로 댓글 내용 업데이트\r\n        comment.mtip_reply_content =\r\n          updatedComment.mtip_reply_content || comment.editingContent.trim();\r\n        comment.isEditing = false;\r\n      } catch (error) {\r\n        console.error('댓글 수정 중 오류가 발생했습니다:', error);\r\n        // 오류 처리 (예: 사용자에게 알림)\r\n      }\r\n    },\r\n    async deleteComment(mtip_reply_no) {\r\n      try {\r\n        await this.$store.dispatch('mtipReply/deleteComment', mtip_reply_no);\r\n      } catch (error) {\r\n        console.error('댓글 삭제 중 오류가 발생했습니다:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.comments-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  justify-content: flex-start; /* 왼쪽 정렬 */\r\n  width: 100%; /* 전체 너비를 사용 */\r\n}\r\n.comment-input {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  gap: 10px; /* 텍스트 영역과 버튼 사이의 간격 */\r\n}\r\n\r\n.comment-input textarea {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 15px;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin-bottom: 20px;\r\n}\r\n.profile-small {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n  align-self: flex-start; /* 이미지를 왼쪽으로 정렬 */\r\n}\r\n.profile-placeholder {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: #ccc;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  color: #fff;\r\n}\r\n.comment-content {\r\n  flex-grow: 1; /* 0.05에서 1로 변경 */\r\n  width: calc(100% - 55px); /* 프로필 이미지 너비와 마진을 고려한 너비 설정 */\r\n}\r\n.comment-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-bottom: 5px; /* 이름/날짜와 내용 사이의 간격 */\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .comment-meta {\r\n    display: flex;\r\n    flex-wrap: wrap; /* 줄바꿈을 허용하도록 변경 */\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .comment-actions {\r\n    margin-left: 0; /* 마진을 제거하여 줄바꿈될 때 영향을 받지 않도록 함 */\r\n    margin-top: 5px; /* 버튼들 사이의 간격 추가 */\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 100%; /* 버튼들이 새로운 줄에서 100% 너비를 가지도록 함 */\r\n  }\r\n\r\n  .comment-actions button {\r\n    margin-right: 10px; /* 버튼 사이의 간격 */\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./UserComment.vue?vue&type=template&id=c0842bc2&scoped=true\"\nimport script from \"./UserComment.vue?vue&type=script&lang=js\"\nexport * from \"./UserComment.vue?vue&type=script&lang=js\"\n\nimport \"./UserComment.vue?vue&type=style&index=0&id=c0842bc2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c0842bc2\"]])\n\nexport default __exports__","import { render } from \"./M_TipDetailView.vue?vue&type=template&id=c2b7713a&scoped=true\"\nimport script from \"./M_TipDetailView.vue?vue&type=script&lang=js\"\nexport * from \"./M_TipDetailView.vue?vue&type=script&lang=js\"\n\nimport \"./M_TipDetailView.vue?vue&type=style&index=0&id=c2b7713a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c2b7713a\"]])\n\nexport default __exports__"],"names":["class","key","_createElementVNode","style","_createElementBlock","_hoisted_1","$options","notice","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","goBack","_hoisted_5","_createTextVNode","_hoisted_6","isLoggedIn","user_no","loginInfo","isChecked","_hoisted_7","goToModifyView","deleteNotice","_createCommentVNode","user_is_admin","user_is_manager","_hoisted_8","mtip_complainBack","deleteNoticeAdmin","_hoisted_9","isNew","mtip_board_date","_hoisted_10","_hoisted_11","_toDisplayString","mtip_board_title","_hoisted_12","_hoisted_13","user_name","_hoisted_14","formatDate","_hoisted_15","_hoisted_16","mtip_board_content","_hoisted_17","_hoisted_18","_hoisted_19","mtip_board_file","_hoisted_20","_hoisted_21","_withModifiers","downloadFile","href","getDisplayFileName","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","mtip_board_hit","toggleLike","_hoisted_26","_normalizeClass","isLiked","_normalizeStyle","color","_hoisted_27","mtip_board_like","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","mtip_complain","_hoisted_33","$data","isNoticeLoaded","_createBlock","_component_UserComment","mtip_board_no","_hoisted_34","isLoading","_hoisted_35","_hoisted_36","comments","length","placeholder","$event","newComment","onKeydown","_withKeys","addComment","_Fragment","_renderList","comment","mtip_reply_no","src","profileImageUrl","alt","onError","setDefaultImage","mtip_reply_date","$props","isEditing","startEditing","finishEditing","deleteComment","editingContent","mtip_reply_content","name","props","type","Object","required","Number","data","created","this","fetchComments","computed","mapGetters","getComments","watch","deep","methods","mapActions","getInitials","charAt","toUpperCase","$store","dispatch","trim","commentData","error","console","event","target","require","dateString","options","year","month","day","Date","toLocaleString","editingCommentId","updatedComment","__exports__","modules","mtipReply","localIsLiked","immediate","handler","newId","oldId","fetchNoticeDetail","commit","components","UserComment","mapMutations","log","action","result","updateLikeStatus","alert","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","reverseButtons","allowOutsideClick","scrollbarPadding","then","async","isConfirmed","api","delete","$router","push","post","showAlert","message","$swal","allowEscapeKey","allowEnterKey","stopKeydownPropagation","backdrop","didOpen","document","body","classList","add","documentElement","overflow","willClose","remove","fileName","UUID_LENGTH","substring","go","params","today","noticeDate","diffTime","Math","abs","diffDays","ceil","date","isNaN","getTime","encodeURIComponent","response","url","method","responseType","window","URL","createObjectURL","Blob","link","createElement","setAttribute","appendChild","click","removeChild","id","noticeId","likeStatus","checkLikeStatus","SET_LIKE_STATUS","localStorage","setItem","JSON","stringify","mapState","getNotice","getLoginInfo","getIsChecked","mileNo","$route","mounted","storedLikeStatus","getItem","parse","render"],"sourceRoot":""}