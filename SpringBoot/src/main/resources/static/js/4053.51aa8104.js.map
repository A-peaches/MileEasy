{"version":3,"file":"js/4053.51aa8104.js","mappings":"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","sources":["webpack://mile/./node_modules/core-js/internals/array-includes.js","webpack://mile/./node_modules/core-js/internals/array-set-length.js","webpack://mile/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://mile/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://mile/./node_modules/core-js/internals/enum-bug-keys.js","webpack://mile/./node_modules/core-js/internals/export.js","webpack://mile/./node_modules/core-js/internals/indexed-object.js","webpack://mile/./node_modules/core-js/internals/is-array.js","webpack://mile/./node_modules/core-js/internals/is-forced.js","webpack://mile/./node_modules/core-js/internals/length-of-array-like.js","webpack://mile/./node_modules/core-js/internals/math-trunc.js","webpack://mile/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://mile/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://mile/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://mile/./node_modules/core-js/internals/object-keys-internal.js","webpack://mile/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://mile/./node_modules/core-js/internals/own-keys.js","webpack://mile/./node_modules/core-js/internals/to-absolute-index.js","webpack://mile/./node_modules/core-js/internals/to-indexed-object.js","webpack://mile/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://mile/./node_modules/core-js/internals/to-length.js","webpack://mile/./node_modules/core-js/modules/es.array.push.js","webpack://mile/./node_modules/@kurkle/color/dist/color.esm.js","webpack://mile/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://mile/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = global[TARGET] && global[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 <= 121 and Safari <= 15.4; FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","O","length","value","index","module","exports","includes","indexOf","DESCRIPTORS","isArray","$TypeError","TypeError","getOwnPropertyDescriptor","Object","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","this","defineProperty","writable","error","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","exceptions","keys","f","i","key","MAX_SAFE_INTEGER","it","global","createNonEnumerableProperty","defineBuiltIn","defineGlobalProperty","copyConstructorProperties","isForced","options","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","uncurryThis","fails","classof","$Object","split","propertyIsEnumerable","Array","argument","isCallable","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","String","replace","toLowerCase","toLength","obj","ceil","Math","floor","trunc","x","n","call","propertyIsEnumerableModule","createPropertyDescriptor","toPropertyKey","IE8_DOM_DEFINE","$getOwnPropertyDescriptor","P","internalObjectKeys","enumBugKeys","hiddenKeys","concat","getOwnPropertyNames","getOwnPropertySymbols","push","object","names","result","$propertyIsEnumerable","NASHORN_BUG","V","enumerable","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","anObject","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","len","$","toObject","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","properErrorOnNonWritableLength","proto","arity","item","argCount","arguments","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","alpha","hexString","HUE_RE","hsl2rgbn","s","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","Z","Y","X","W","U","T","S","R","Q","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","parseInt","nameParse","transparent","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","assign","fromObject","input","functionParse","charAt","Color","constructor","type","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","create","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","fraction","niceFraction","_factorize","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","configurable","forEach","method","base","res","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","appliers","toFontString","_measureText","gc","longest","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","Reflect","getPrototypeOf","getKeysFromAllScopes","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","plugin_colors","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}