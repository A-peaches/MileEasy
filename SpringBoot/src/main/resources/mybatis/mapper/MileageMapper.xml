<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mileEasy.mapper.MileageDao">
    <select id ="getMileage" resultType="com.kbstar.mileEasy.dto.Mileage"> <!--selectAllUser 실행 -->
        SELECT * FROM mileage;
    </select>


    <select id="getMileScore" resultType="com.kbstar.mileEasy.dto.MileScore">
        SELECT
            m.mile_name AS mile_no,
            SUM(DISTINCT IFNULL(s.mile_score_point, 0)) AS mile_score_point,
            AVG(h.mile_history_point) AS mile_prev_score,
            r.mile_link
        FROM
            mile_recommand r
                LEFT JOIN mileage m ON r.mile_no = m.mile_no
                LEFT JOIN (
                SELECT mile_no, user_no, SUM(mile_score_point) AS mile_score_point
                FROM mile_score
                WHERE user_no = #{user_no}
                GROUP BY mile_no, user_no
            ) s ON s.mile_no = r.mile_no
                LEFT JOIN mile_history h ON h.mile_no = r.mile_no
                AND h.user_no = s.user_no
                AND h.mile_history_date BETWEEN DATE_SUB(LAST_DAY(CURRENT_DATE) + INTERVAL 1 DAY, INTERVAL 2 MONTH)
                                                AND LAST_DAY(DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH))
        GROUP BY
            m.mile_name, r.mile_link;
    </select>


    <select id="getHitMileCount" resultType="int">
        SELECT COUNT(*)
        FROM hit_mile
        WHERE mile_no = #{mile_no}
          AND hit_date = CURRENT_DATE;
    </select>

    <insert id="insertHitMile">
        INSERT INTO hit_mile (mile_no, hit_count, hit_date)
        VALUES (#{mile_no},1, CURRENT_DATE);
    </insert>

    <update id="updateMile">
        UPDATE hit_mile
        SET hit_count = hit_count + 1
        WHERE mile_no = #{mile_no} and hit_date = CURRENT_DATE;
    </update>

    <select id="getHitMile" resultType="com.kbstar.mileEasy.dto.HitMile">
        SELECT m.mile_no, m.mile_name, COALESCE(h.hit_count, 0) AS hit_count
        FROM mileage m
                 LEFT JOIN (
            SELECT mile_no, hit_count
            FROM hit_mile
            WHERE hit_date = DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY)
        ) h ON m.mile_no = h.mile_no
        ORDER BY m.mile_no;
    </select>

    <select id="getHitMileDATE" resultType="com.kbstar.mileEasy.dto.HitMile">
        SELECT m.mile_no, m.mile_name, COALESCE(h.hit_count, 0) AS hit_count
        FROM mileage m
                 LEFT JOIN (
            SELECT mile_no, hit_count
            FROM hit_mile
            WHERE hit_date = #{date}
        ) h ON m.mile_no = h.mile_no
        ORDER BY m.mile_no;
    </select>




    <select id="getRecommand" resultType="com.kbstar.mileEasy.dto.MileRecommand">
        select * from mile_recommand where mile_no = (
            select mile_no
            from mile_score
            where user_no=#{user_no}
            order by mile_score_point ASC LIMIT 1);
    </select>


    <insert id="insertMileExcel">
        insert into mile_excel (mile_no, mile_excel_file) values ( #{mile_no}, #{mile_excel_file});
    </insert>

    <select id="selectMileExcel" resultType="com.kbstar.mileEasy.dto.MileExcel">
        select * from mile_excel where date(mile_excel_date) = #{selectedDate};
    </select>

    <select id="selectTotalExcel" resultType="com.kbstar.mileEasy.dto.MileExcel">
        select * from mile_excel where mile_no = #{mile_no};
    </select>


    <select id="kingData" resultType="com.kbstar.mileEasy.dto.MileScore">
        SELECT user_no, total_score,
               (SELECT COUNT(DISTINCT total_score)
                FROM (SELECT SUM(mile_score_point) AS total_score
                      FROM mile_score
                      GROUP BY user_no) AS scores
                WHERE total_score >= s.total_score) AS ranking
        FROM (SELECT user_no, SUM(mile_score_point) AS total_score
              FROM mile_score
              GROUP BY user_no) AS s
        ORDER BY total_score DESC
            LIMIT 3;
    </select>
</mapper>
