<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mileEasy.mapper.TargetDao">
    <!-- 개인형 목표 추가하기-->
    <insert id="insertTarget" useGeneratedKeys="true" keyProperty="target_no">
        INSERT INTO target (mile_no, user_no, start_date, end_date, target_mileage, is_together, is_manager_plan)
        VALUES (#{mile_no}, #{user_no}, #{start_date}, #{end_date}, #{target_mileage}, #{is_together}, #{is_manager_plan})
    </insert>

    <insert id="insertUserTarget">
        INSERT INTO user_target (user_no, target_no, mile_no, start_date, end_date, target_mileage, is_together)
        VALUES (#{user_no}, #{target_no}, #{mile_no}, #{start_date}, #{end_date}, #{target_mileage}, #{is_together})
    </insert>

    <!-- 개인형 목표 불러오기 -->
    <select id="getTargetsByUserNo" parameterType="map" resultType="com.kbstar.mileEasy.dto.Usertarget">
    <![CDATA[
        WITH closest_date AS (
            SELECT
                ut.target_no,
                ut.user_no,
                ut.mile_no,
                ut.start_date,
                COALESCE(
                        (SELECT mh.mile_history_date
                         FROM mile_history mh
                         WHERE mh.user_no = ut.user_no AND mh.mile_no = ut.mile_no
                         ORDER BY ABS(DATEDIFF(mh.mile_history_date, ut.start_date))
                        LIMIT 1),
            (SELECT ms.mile_score_date
             FROM mile_score ms
             WHERE ms.user_no = ut.user_no AND ms.mile_no = ut.mile_no
             ORDER BY ABS(DATEDIFF(ms.mile_score_date, ut.start_date))
             LIMIT 1),
            ut.start_date
        ) AS closest_date,
                CASE
                    WHEN (SELECT mh.mile_history_date
                          FROM mile_history mh
                          WHERE mh.user_no = ut.user_no AND mh.mile_no = ut.mile_no
                          ORDER BY ABS(DATEDIFF(mh.mile_history_date, ut.start_date))
                        LIMIT 1) <=
                 (SELECT ms.mile_score_date
                  FROM mile_score ms
                  WHERE ms.user_no = ut.user_no AND ms.mile_no = ut.mile_no
                  ORDER BY ABS(DATEDIFF(ms.mile_score_date, ut.start_date))
                  LIMIT 1)
            THEN 'mile_history'
            ELSE 'mile_score'
        END AS closest_table
    FROM user_target ut
    WHERE ut.user_no = #{userNo} AND ut.is_together = 0
        ),
        total_mile_history_score AS (
        SELECT
        cd.target_no,
        COALESCE(
        CASE
        WHEN cd.closest_table = 'mile_history' THEN
        (SELECT SUM(mh.mile_history_point)
        FROM mile_history mh
        WHERE mh.user_no = cd.user_no
        AND mh.mile_no = cd.mile_no
        AND mh.mile_history_date = cd.closest_date)
        ELSE
        (SELECT SUM(ms.mile_score_point)
        FROM mile_score ms
        WHERE ms.user_no = cd.user_no
        AND ms.mile_no = cd.mile_no
        AND ms.mile_score_date = cd.closest_date)
        END, 0) AS totalMileHistoryScore
        FROM closest_date cd
        ),
        total_mile_score AS (
        SELECT
        ut.target_no,
        COALESCE(SUM(ms.mile_score_point), 0) AS totalMileScore
        FROM user_target ut
        LEFT JOIN mile_score ms ON ut.user_no = ms.user_no AND ut.mile_no = ms.mile_no
        WHERE ut.user_no = #{userNo}
        AND ut.is_together = 0
        GROUP BY ut.target_no
        )
        SELECT DISTINCT
            t.target_no,
            t.mile_no,
            t.user_no,
            t.start_date,
            t.end_date,
            ut.target_mileage,
            t.is_together,
            t.is_manager_plan,
            m.mile_name,
            COALESCE(tmhs.totalMileHistoryScore, 0) AS totalMileHistoryScore,
            COALESCE(tms.totalMileScore, 0) AS totalMileScore,
            ABS(COALESCE(tms.totalMileScore, 0) - COALESCE(tmhs.totalMileHistoryScore, 0)) AS totalMileScoreByTargetNo,
            CASE
                WHEN ut.target_mileage > 0 THEN
                    FLOOR((ABS(COALESCE(tms.totalMileScore, 0) - COALESCE(tmhs.totalMileHistoryScore, 0)) / ut.target_mileage) * 100)
                ELSE 0
                END AS achievementRate
        FROM user_target ut
                 LEFT JOIN total_mile_history_score tmhs ON tmhs.target_no = ut.target_no
                 LEFT JOIN total_mile_score tms ON tms.target_no = ut.target_no
                 LEFT JOIN target t ON t.target_no = ut.target_no
                 LEFT JOIN mileage m ON t.mile_no = m.mile_no
        WHERE ut.user_no = #{userNo}
          AND ut.is_together = 0
        ORDER BY t.start_date ASC;
        ]]>
</select>


    <!-- 참여형 목표 불러오기 -->
    <select id="getAdminTargets" parameterType="string" resultType="com.kbstar.mileEasy.dto.Usertarget">
    <![CDATA[
        WITH closest_date AS (
            SELECT
                t.target_no,
                t.user_no,  -- target 테이블에서 user_no 조회
                t.mile_no,
                t.start_date,
                COALESCE(
                        (SELECT mh.mile_history_date
                         FROM mile_history mh
                         WHERE mh.user_no = t.user_no
                           AND mh.mile_no = t.mile_no
                         ORDER BY ABS(DATEDIFF(mh.mile_history_date, t.start_date))
                        LIMIT 1),
            (SELECT ms.mile_score_date
             FROM mile_score ms
             WHERE ms.user_no = t.user_no
               AND ms.mile_no = t.mile_no
             ORDER BY ABS(DATEDIFF(ms.mile_score_date, t.start_date))
             LIMIT 1),
            t.start_date
        ) AS closest_date,
                CASE
                    WHEN (SELECT mh.mile_history_date
                          FROM mile_history mh
                          WHERE mh.user_no = t.user_no
                            AND mh.mile_no = t.mile_no
                          ORDER BY ABS(DATEDIFF(mh.mile_history_date, t.start_date))
                        LIMIT 1) <=
                 (SELECT ms.mile_score_date
                  FROM mile_score ms
                  WHERE ms.user_no = t.user_no
                    AND ms.mile_no = t.mile_no
                  ORDER BY ABS(DATEDIFF(ms.mile_score_date, t.start_date))
                  LIMIT 1)
        THEN 'mile_history'
        ELSE 'mile_score'
        END AS closest_table
    FROM target t
    WHERE t.is_together = 1
),
total_mile_history_score AS (
    SELECT
        cd.target_no,
        COALESCE(SUM(mh.mile_history_point), 0) AS totalMileHistoryScore
    FROM closest_date cd
    LEFT JOIN mile_history mh
    ON mh.user_no = cd.user_no
    AND mh.mile_no = cd.mile_no
    AND mh.mile_history_date = cd.closest_date
    GROUP BY cd.target_no
),
total_mile_score AS (
    SELECT
        t.target_no,
        COALESCE(SUM(ms.mile_score_point), 0) AS totalMileScore
    FROM target t
    LEFT JOIN mile_score ms ON t.user_no = ms.user_no AND t.mile_no = ms.mile_no
    WHERE t.is_together = 1
    GROUP BY t.target_no
)
        SELECT DISTINCT
            t.target_no,
            t.mile_no,
            t.user_no,  -- target 테이블에서 user_no 조회
            t.start_date,
            t.end_date,
            t.target_mileage,  -- target 테이블에서 조회
            t.is_together,
            t.is_manager_plan,
            m.mile_name,  -- mile_name 추가
            COALESCE(tmhs.totalMileHistoryScore, 0) AS totalMileHistoryScore,
            COALESCE(tms.totalMileScore, 0) AS totalMileScore,
            ABS(COALESCE(tms.totalMileScore, 0) - COALESCE(tmhs.totalMileHistoryScore, 0)) AS totalMileScoreByTargetNo,
            CASE
                WHEN t.target_mileage > 0 THEN
                    ROUND((ABS(COALESCE(tms.totalMileScore, 0) - COALESCE(tmhs.totalMileHistoryScore, 0)) / t.target_mileage) * 100, 2)
                ELSE 0
                END AS achievementRate,
            (SELECT COUNT(ut2.user_no)
             FROM user_target ut2
             WHERE ut2.target_no = t.target_no
            ) AS participantCount  -- 참여자 수 계산
        FROM target t
                 LEFT JOIN total_mile_history_score tmhs ON tmhs.target_no = t.target_no
                 LEFT JOIN total_mile_score tms ON tms.target_no = t.target_no
                 LEFT JOIN mileage m ON t.mile_no = m.mile_no
        WHERE t.is_together = 1
        ORDER BY t.start_date ASC;
        ]]>
    </select>




    <!-- 사용자가 특정 타겟에 참여했는지 확인 -->
    <select id="checkUserParticipation" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM user_target
        WHERE target_no = #{targetNo}
          AND user_no = #{userNo}
    </select>

    <!-- 특정 목표 정보 가져오기 -->
    <select id="getTargetByNo" resultType="com.kbstar.mileEasy.dto.Target">
        SELECT
            target_no,
            mile_no,
            user_no,
            start_date,
            end_date,
            target_mileage,
            is_together,
            is_manager_plan
        FROM target
        WHERE target_no = #{targetNo}
    </select>

    <!-- 사용자 목표 참여 정보 삽입 (INSERT) -->
    <insert id="insertjoinTarget" parameterType="com.kbstar.mileEasy.dto.Usertarget">
        INSERT INTO user_target (
            target_no,
            user_no,
            mile_no,
            start_date,
            end_date,
            target_mileage,
            is_together,
            mawang_score
        )
        VALUES (
                   #{target_no},
                   #{user_no},
                   #{mile_no},
                   #{start_date},
                   #{end_date},
                   #{target_mileage},
                   #{is_together},
                   #{mawang_score}
               );
    </insert>


    <!-- 참여형 참가한 직원 목록 -->
    <select id="findUsersByTargetNo" resultType="map">
        SELECT u.user_no, u.user_name
        FROM user_target ut
                 JOIN user u ON ut.user_no = u.user_no
        WHERE ut.target_no = #{target_no}
    </select>

    <!-- UserTarget 삭제하기 -->
    <delete id="deleteUserTarget">
        DELETE FROM user_target WHERE user_no = #{userNo} AND target_no = #{targetNo}
    </delete>

    <!-- Target 삭제하기 -->
    <delete id="deleteTarget">
        DELETE FROM target WHERE user_no = #{userNo} AND target_no = #{targetNo}
    </delete>

    <!--마왕 점수 업그레이드-->
    <update id="updateMawangScore" parameterType="map">
        UPDATE user_target
        SET mawang_score = 1
        WHERE target_no = #{targetNo} AND user_no = #{userNo}
    </update>

    <!-- 특정 목표(target_no)에 참가한 사용자의 목록, 달성률, 현재 마일리지 점수, 목표 마일리지 및 전화번호 조회 -->
<!--    <select id="getPromotionParticipantsData" parameterType="int" resultType="java.util.Map">-->
<!--        SELECT-->
<!--            ut.user_no,-->
<!--            u.user_name,-->
<!--            u.user_tel,-->
<!--            t.target_mileage,-->

<!--            &#45;&#45; start_mileage_score 계산-->
<!--            (-->
<!--                SELECT COALESCE(SUM(point_score), 0)-->
<!--                FROM (-->
<!--                         SELECT ms.mile_score_point AS point_score, ms.mile_score_date AS score_date-->
<!--                         FROM mile_score ms-->
<!--                         WHERE ms.mile_no = #{mileNo}-->
<!--                           AND ms.mile_score_date &lt;= t.start_date-->
<!--                         UNION ALL-->
<!--                         SELECT mh.mile_history_point AS point_score, mh.mile_history_date AS score_date-->
<!--                         FROM mile_history mh-->
<!--                         WHERE mh.mile_no = #{mileNo}-->
<!--                           AND mh.mile_history_date &lt;= t.start_date-->
<!--                     ) AS combined_scores-->
<!--                ORDER BY ABS(DATEDIFF(combined_scores.score_date, t.start_date)) ASC-->
<!--                LIMIT 1-->
<!--            ) AS start_mileage_score,-->

<!--    &#45;&#45; current_mileage_score 계산-->
<!--    (-->
<!--        (-->
<!--            &#45;&#45; 현재 마일리지 점수 계산 (mile_score와 mile_history 테이블에서 가장 가까운 날짜의 점수)-->
<!--            SELECT COALESCE(SUM(point_score), 0)-->
<!--            FROM (-->
<!--                SELECT ms.mile_score_point AS point_score, ms.mile_score_date AS score_date-->
<!--                FROM mile_score ms-->
<!--                WHERE ms.mile_no = #{mileNo}-->
<!--                AND ms.mile_score_date &lt;= NOW()-->
<!--                UNION ALL-->
<!--                SELECT mh.mile_history_point AS point_score, mh.mile_history_date AS score_date-->
<!--            FROM mile_history mh-->
<!--            WHERE mh.mile_no = #{mileNo}-->
<!--                AND mh.mile_history_date &lt;= NOW()-->
<!--                ) AS combined_scores-->
<!--                ORDER BY combined_scores.score_date DESC-->
<!--                LIMIT 1-->
<!--                ) - -->
<!--            &#45;&#45; 시작 시점의 마일리지 점수를 뺌-->
<!--                (-->
<!--                SELECT COALESCE(SUM(point_score), 0)-->
<!--            FROM (-->
<!--            SELECT ms.mile_score_point AS point_score, ms.mile_score_date AS score_date-->
<!--            FROM mile_score ms-->
<!--            WHERE ms.mile_no = #{mileNo}-->
<!--                AND ms.mile_score_date &lt;= t.start_date-->
<!--                UNION ALL-->
<!--                SELECT mh.mile_history_point AS point_score, mh.mile_history_date AS score_date-->
<!--            FROM mile_history mh-->
<!--            WHERE mh.mile_no = #{mileNo}-->
<!--                AND mh.mile_history_date &lt;= t.start_date-->
<!--                ) AS combined_scores-->
<!--                ORDER BY ABS(DATEDIFF(combined_scores.score_date, t.start_date)) ASC-->
<!--            LIMIT 1-->
<!--            )-->
<!--            ) AS current_mileage_score,-->

<!--            &#45;&#45; 달성률 계산-->
<!--            CASE-->
<!--            WHEN t.target_mileage &gt; 0 THEN-->
<!--            FLOOR(-->
<!--            (-->
<!--            (-->
<!--            &#45;&#45; 현재 마일리지 점수 계산 (start_mileage_score를 뺀 후 달성률 계산)-->
<!--            SELECT COALESCE(SUM(point_score), 0)-->
<!--            FROM (-->
<!--            SELECT ms.mile_score_point AS point_score, ms.mile_score_date AS score_date-->
<!--            FROM mile_score ms-->
<!--            WHERE ms.mile_no = #{mileNo}-->
<!--                AND ms.mile_score_date &lt;= NOW()-->
<!--                UNION ALL-->
<!--                SELECT mh.mile_history_point AS point_score, mh.mile_history_date AS score_date-->
<!--            FROM mile_history mh-->
<!--            WHERE mh.mile_no = #{mileNo}-->
<!--                AND mh.mile_history_date &lt;= NOW()-->
<!--                ) AS combined_scores-->
<!--                ORDER BY combined_scores.score_date DESC-->
<!--                LIMIT 1-->
<!--                ) - -->
<!--                (-->
<!--                SELECT COALESCE(SUM(point_score), 0)-->
<!--            FROM (-->
<!--            SELECT ms.mile_score_point AS point_score, ms.mile_score_date AS score_date-->
<!--            FROM mile_score ms-->
<!--            WHERE ms.mile_no = #{mileNo}-->
<!--                AND ms.mile_score_date &lt;= t.start_date-->
<!--                UNION ALL-->
<!--                SELECT mh.mile_history_point AS point_score, mh.mile_history_date AS score_date-->
<!--            FROM mile_history mh-->
<!--            WHERE mh.mile_no = #{mileNo}-->
<!--                AND mh.mile_history_date &lt;= t.start_date-->
<!--                ) AS combined_scores-->
<!--                ORDER BY ABS(DATEDIFF(combined_scores.score_date, t.start_date)) ASC-->
<!--            LIMIT 1-->
<!--            )-->
<!--            ) / t.target_mileage * 100-->
<!--            )-->
<!--            ELSE 0-->
<!--        END AS achievementRate-->

<!--    FROM-->
<!--    user_target ut-->
<!--    JOIN target t ON ut.target_no = t.target_no-->
<!--    JOIN user u ON ut.user_no = u.user_no-->
<!--    WHERE-->
<!--    ut.target_no = #{targetNo}-->
<!--        ORDER BY-->
<!--        achievementRate DESC;-->
<!--    </select>-->

    <!-- 목표에 참가한 사람들의 정보를 조회 -->
    <select id="getParticipantsByTargetNo" parameterType="map" resultType="map">
        SELECT
            t.target_no,
            u.user_no,
            u.user_name,
            u.user_tel,
            ut.mawang_score,
            -- 참가자 수, 달성한 사람 수, 미달성한 사람 수를 계산
            (SELECT COUNT(ut_inner.user_no)
             FROM user_target ut_inner
             WHERE ut_inner.target_no = t.target_no) AS total_participants,
            (SELECT COUNT(ut_inner.user_no)
             FROM user_target ut_inner
             WHERE ut_inner.target_no = t.target_no AND ut_inner.mawang_score = 1) AS achieved_count,
            (SELECT COUNT(ut_inner.user_no)
             FROM user_target ut_inner
             WHERE ut_inner.target_no = t.target_no AND ut_inner.mawang_score = 0) AS not_achieved_count,
            u.user_tel AS not_achieved_phone -- 개별 전화번호 항목으로 조회
        FROM
            target t
                INNER JOIN user_target ut ON t.target_no = ut.target_no
                INNER JOIN user u ON ut.user_no = u.user_no
        WHERE
            t.target_no = #{targetNo}
          AND ut.mile_no = #{mileNo}
        ORDER BY
            u.user_name;
    </select>




</mapper>
