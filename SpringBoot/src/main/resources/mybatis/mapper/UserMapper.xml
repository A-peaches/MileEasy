<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">





<mapper namespace="com.kbstar.mileEasy.mapper.UserDao">
    <!--UserDao랑 연결되어있음-->
    <!--my batis 사용하기
    1. UserDao 만들어서 인터페이스 만들기! (리턴형태와 매개변수까지만!!  User selectUserById(String user_no); )
    2. Mapper에서 내용물 만들기 -> dao 인터페이스 이름과 동일하게 id설정해야됨!!!)
    3. 아래와 같이 쿼리문 작성하기

    -->
    <select id="selectUserById" parameterType="String" resultType="com.kbstar.mileEasy.dto.User">
        SELECT * FROM user WHERE user_no = #{user_no}
    </select>

    <select id ="selectAllUser" resultType="com.kbstar.mileEasy.dto.User"> <!--selectAllUser 실행 -->
        SELECT * FROM user;
    </select>

    <select id="checkedUser" parameterType="map" resultType="com.kbstar.mileEasy.dto.User">
        SELECT
            u.user_no,
            u.user_email,
            u.user_pw,
            u.user_name,
            u.user_profile,
            u.user_year,
            u.user_birth,
            d.dp_name AS dp_no,
            l.level_name AS level_no,
            j.job_name AS job_no,
            p.position_name AS position_no,
            u.user_is_delete,
            u.user_is_manager,
            u.user_is_admin
        FROM
            user u
                JOIN department d ON u.dp_no = d.dp_no
                JOIN level l ON u.level_no = l.level_no
                JOIN job j ON u.job_no = j.job_no
                JOIN position p ON u.position_no = p.position_no
        WHERE
            u.user_no = #{user_no} AND u.user_pw = #{user_pw};
    </select>

    <select id ="selectUserByEmail" resultType="com.kbstar.mileEasy.dto.User">
        SELECT * FROM user WHERE user_no = #{user_no};
    </select>

    <update id="updatePW">
        update user set user_pw = #{tempPw} where user_no = #{user_no};
    </update>

    <insert id="loginHistory">
        INSERT INTO login_history (user_no, login_date)
        VALUES (#{user_no}, CURRENT_DATE);
    </insert>

    <select id="loginHistoryCountArray"  resultType="com.kbstar.mileEasy.dto.LoginHistory" >
    <![CDATA[
        WITH RECURSIVE DateRange AS (
            SELECT CAST(#{startDate} AS DATE) AS login_date
            UNION ALL
            SELECT login_date + INTERVAL 1 DAY
        FROM DateRange
        WHERE login_date + INTERVAL 1 DAY <= #{endDate}
            )
        SELECT
            DateRange.login_date,
            COALESCE(COUNT(login_history.login_date), 0) AS count
        FROM
            DateRange
            LEFT JOIN
            login_history
        ON
            DateRange.login_date = login_history.login_date
        GROUP BY
            DateRange.login_date
        ORDER BY
            DateRange.login_date;
        ]]>
  </select>
</mapper>
