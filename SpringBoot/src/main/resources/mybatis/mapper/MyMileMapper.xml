<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mileEasy.mapper.MyMileDao">
    <select id="getMyMiles" resultType="com.kbstar.mileEasy.beans.MyMiles">
        SELECT
            m.mile_no,
            m.mile_name,
            SUM(CASE WHEN ms.user_no = #{userNo} THEN ms.mile_score_point ELSE 0 END) AS user_point,
            m.mile_max,
            SUM(ms.mile_score_point) AS all_point,
            MAX(ms.mile_score_date) AS mile_date, -- 가장 최근 날짜를 가져옴
            m.mile_is_branch
        FROM
            mileage m
                LEFT JOIN mile_score ms ON ms.mile_no = m.mile_no
        WHERE
            m.mile_is_delete = 0
        GROUP BY
            m.mile_no, m.mile_name, m.mile_max, m.mile_is_branch;
    </select>

    <select id="getMileStatus" resultType="com.kbstar.mileEasy.beans.MileStatus">
        SELECT
            md.mile_score_name AS score_name,
            COALESCE(ms.user_point, 0) AS user_point,
            m.mile_name,
            COALESCE(mh.prev_point, 0) AS prev_point,
            ms.latest_score_date AS mile_date,
            mh.latest_history_date AS prev_date,
            md.job_name
        FROM
            mileage_detail md
                LEFT JOIN
            mileage m ON md.mile_no = m.mile_no
                LEFT JOIN
            (SELECT mile_no, mile_score_name, SUM(mile_score_point) AS user_point, MAX(mile_score_date) AS latest_score_date
             FROM mile_score
             WHERE user_no = #{userNo}
             GROUP BY mile_no, mile_score_name) ms
            ON md.mile_no = ms.mile_no AND md.mile_score_name = ms.mile_score_name
                LEFT JOIN
            (SELECT mile_no, mile_history_name, MAX(mile_history_point) AS prev_point, MAX(mile_history_date) AS latest_history_date
             FROM mile_history
             WHERE mile_no = #{mileNo}
             GROUP BY mile_no, mile_history_name) mh
            ON md.mile_no = mh.mile_no AND md.mile_score_name = mh.mile_history_name
        WHERE
            m.mile_no = #{mileNo}
        GROUP BY
            md.mile_score_name, m.mile_name, ms.user_point, mh.prev_point, ms.latest_score_date, mh.latest_history_date,md.job_name;

    </select>


    <select id="getExcelNotice" resultType="com.kbstar.mileEasy.beans.ExcelNotice">
        SELECT
            me.mile_no,
            me.mile_excel_file,
            me.mile_excel_date,
            m.mile_name,
            m.mile_is_branch,
            m.mile_description
        FROM
            mile_excel me
                JOIN
            mileage m ON me.mile_no = m.mile_no
        WHERE
            me.mile_excel_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND DATE_ADD(CURDATE(), INTERVAL 1 DAY)
        ORDER BY
            me.mile_excel_date DESC;
    </select>

    <select id="selectMileDocument" resultType="com.kbstar.mileEasy.dto.DocumentMile">
        select mile_name, document_file, date(document_date) as document_date
        from Document_mile dm
        join mileage m on dm.mile_no = m.mile_no
        order by document_date DESC;
    </select>

    <select id="selectCount" resultType="int">
        select count(*) from Document_mile;

    </select>


    <select id="loadBadgeData" resultType="com.kbstar.mileEasy.beans.BadgeData">
        SELECT
            is_king AS mile_is_king ,
            is_jump AS mile_is_jump,
            monthly_king_date AS start_date,
            LAST_DAY(monthly_king_date) AS end_date,
            CASE
                WHEN MONTH(monthly_king_date) = MONTH(CURDATE()) AND YEAR(monthly_king_date) = YEAR(CURDATE()) THEN 'Y'
        ELSE 'N'
        END AS current_month
FROM
    monthly_king
WHERE
    user_no = #{userNo}
order by
	start_date desc;

    </select>
</mapper>
